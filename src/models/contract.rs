/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Contract {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(
        rename = "additionalAddresses",
        skip_serializing_if = "Option::is_none"
    )]
    pub additional_addresses: Option<Vec<crate::models::ContractAdditionalAddress>>,
    #[serde(
        rename = "authorizationUnitId",
        skip_serializing_if = "Option::is_none"
    )]
    pub authorization_unit_id: Option<String>,
    #[serde(rename = "automaticExtension", skip_serializing_if = "Option::is_none")]
    pub automatic_extension: Option<bool>,
    #[serde(rename = "billUntil", skip_serializing_if = "Option::is_none")]
    pub bill_until: Option<BillUntil>,
    #[serde(rename = "billingDay", skip_serializing_if = "Option::is_none")]
    pub billing_day: Option<i32>,
    #[serde(
        rename = "billingTargetInvoiceStatus",
        skip_serializing_if = "Option::is_none"
    )]
    pub billing_target_invoice_status: Option<BillingTargetInvoiceStatus>,
    #[serde(rename = "billingType", skip_serializing_if = "Option::is_none")]
    pub billing_type: Option<BillingType>,
    #[serde(rename = "cancellationDate", skip_serializing_if = "Option::is_none")]
    pub cancellation_date: Option<i32>,
    #[serde(
        rename = "cancellationPeriodQuantity",
        skip_serializing_if = "Option::is_none"
    )]
    pub cancellation_period_quantity: Option<i32>,
    #[serde(
        rename = "cancellationPeriodSoftframe",
        skip_serializing_if = "Option::is_none"
    )]
    pub cancellation_period_softframe: Option<CancellationPeriodSoftframe>,
    #[serde(
        rename = "cancellationPeriodUnit",
        skip_serializing_if = "Option::is_none"
    )]
    pub cancellation_period_unit: Option<CancellationPeriodUnit>,
    #[serde(rename = "commercialLanguage", skip_serializing_if = "Option::is_none")]
    pub commercial_language: Option<String>,
    #[serde(rename = "commission", skip_serializing_if = "Option::is_none")]
    pub commission: Option<String>,
    #[serde(
        rename = "commissionSalesPartners",
        skip_serializing_if = "Option::is_none"
    )]
    pub commission_sales_partners: Option<Vec<crate::models::CommissionSalesPartner>>,
    #[serde(rename = "contractDate", skip_serializing_if = "Option::is_none")]
    pub contract_date: Option<i32>,
    #[serde(rename = "contractItems", skip_serializing_if = "Option::is_none")]
    pub contract_items: Option<Vec<crate::models::ContractItem>>,
    #[serde(rename = "contractNumber", skip_serializing_if = "Option::is_none")]
    pub contract_number: Option<String>,
    #[serde(
        rename = "contractNumberAtParty",
        skip_serializing_if = "Option::is_none"
    )]
    pub contract_number_at_party: Option<String>,
    #[serde(rename = "contractStatus")]
    pub contract_status: ContractStatus,
    #[serde(
        rename = "correspondenceAddress",
        skip_serializing_if = "Option::is_none"
    )]
    pub correspondence_address: Option<Box<crate::models::RecordAddress>>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(rename = "customAttributes", skip_serializing_if = "Option::is_none")]
    pub custom_attributes: Option<Vec<crate::models::CustomAttribute>>,
    #[serde(rename = "deliveryAddress", skip_serializing_if = "Option::is_none")]
    pub delivery_address: Option<Box<crate::models::RecordAddress>>,
    #[serde(
        rename = "deliveryEmailAddresses",
        skip_serializing_if = "Option::is_none"
    )]
    pub delivery_email_addresses: Option<Box<crate::models::EmailAddresses>>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(
        rename = "differingCorrespondenceAddress",
        skip_serializing_if = "Option::is_none"
    )]
    pub differing_correspondence_address: Option<bool>,
    #[serde(
        rename = "differingDeliveryAddress",
        skip_serializing_if = "Option::is_none"
    )]
    pub differing_delivery_address: Option<bool>,
    #[serde(
        rename = "differingInvoiceAddress",
        skip_serializing_if = "Option::is_none"
    )]
    pub differing_invoice_address: Option<bool>,
    #[serde(
        rename = "disableEmailTemplate",
        skip_serializing_if = "Option::is_none"
    )]
    pub disable_email_template: Option<bool>,
    #[serde(rename = "endDate", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<i32>,
    #[serde(rename = "extensionQuantity", skip_serializing_if = "Option::is_none")]
    pub extension_quantity: Option<i32>,
    #[serde(rename = "extensionUnit", skip_serializing_if = "Option::is_none")]
    pub extension_unit: Option<ExtensionUnit>,
    #[serde(rename = "factoring", skip_serializing_if = "Option::is_none")]
    pub factoring: Option<bool>,
    #[serde(rename = "invoiceAddress", skip_serializing_if = "Option::is_none")]
    pub invoice_address: Option<Box<crate::models::RecordAddress>>,
    #[serde(rename = "invoiceRecipientId", skip_serializing_if = "Option::is_none")]
    pub invoice_recipient_id: Option<String>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(
        rename = "latestCancellationWarningQuantity",
        skip_serializing_if = "Option::is_none"
    )]
    pub latest_cancellation_warning_quantity: Option<i32>,
    #[serde(
        rename = "latestCancellationWarningUnit",
        skip_serializing_if = "Option::is_none"
    )]
    pub latest_cancellation_warning_unit: Option<LatestCancellationWarningUnit>,
    #[serde(
        rename = "latestPossibleTerminationDate",
        skip_serializing_if = "Option::is_none"
    )]
    pub latest_possible_termination_date: Option<i32>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(
        rename = "nextContractBillingDate",
        skip_serializing_if = "Option::is_none"
    )]
    pub next_contract_billing_date: Option<i32>,
    #[serde(
        rename = "nonStandardInputTaxId",
        skip_serializing_if = "Option::is_none"
    )]
    pub non_standard_input_tax_id: Option<String>,
    #[serde(
        rename = "orderNumberAtCustomer",
        skip_serializing_if = "Option::is_none"
    )]
    pub order_number_at_customer: Option<String>,
    #[serde(rename = "partyId", skip_serializing_if = "Option::is_none")]
    pub party_id: Option<String>,
    #[serde(rename = "paymentMethodId", skip_serializing_if = "Option::is_none")]
    pub payment_method_id: Option<String>,
    #[serde(rename = "pricingDate", skip_serializing_if = "Option::is_none")]
    pub pricing_date: Option<i32>,
    #[serde(
        rename = "purchaseEmailAddresses",
        skip_serializing_if = "Option::is_none"
    )]
    pub purchase_email_addresses: Option<Box<crate::models::EmailAddresses>>,
    #[serde(rename = "recordComment", skip_serializing_if = "Option::is_none")]
    pub record_comment: Option<String>,
    #[serde(rename = "recordCurrencyId", skip_serializing_if = "Option::is_none")]
    pub record_currency_id: Option<String>,
    #[serde(rename = "recordCurrencyName", skip_serializing_if = "Option::is_none")]
    pub record_currency_name: Option<String>,
    #[serde(
        rename = "recordEmailAddresses",
        skip_serializing_if = "Option::is_none"
    )]
    pub record_email_addresses: Option<Box<crate::models::EmailAddresses>>,
    #[serde(rename = "recordFreeText", skip_serializing_if = "Option::is_none")]
    pub record_free_text: Option<String>,
    #[serde(rename = "recordOpening", skip_serializing_if = "Option::is_none")]
    pub record_opening: Option<String>,
    #[serde(rename = "reminderDate", skip_serializing_if = "Option::is_none")]
    pub reminder_date: Option<i32>,
    #[serde(rename = "reminderSendType", skip_serializing_if = "Option::is_none")]
    pub reminder_send_type: Option<ReminderSendType>,
    #[serde(rename = "reminderType", skip_serializing_if = "Option::is_none")]
    pub reminder_type: Option<ReminderType>,
    #[serde(rename = "responsibleUserId", skip_serializing_if = "Option::is_none")]
    pub responsible_user_id: Option<String>,
    #[serde(rename = "salesChannel", skip_serializing_if = "Option::is_none")]
    pub sales_channel: Option<String>,
    #[serde(
        rename = "salesInvoiceEmailAddresses",
        skip_serializing_if = "Option::is_none"
    )]
    pub sales_invoice_email_addresses: Option<Box<crate::models::EmailAddresses>>,
    #[serde(
        rename = "salesOrderEmailAddresses",
        skip_serializing_if = "Option::is_none"
    )]
    pub sales_order_email_addresses: Option<Box<crate::models::EmailAddresses>>,
    #[serde(rename = "sentToRecipient", skip_serializing_if = "Option::is_none")]
    pub sent_to_recipient: Option<bool>,
    #[serde(rename = "startDate", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<i32>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "template", skip_serializing_if = "Option::is_none")]
    pub template: Option<bool>,
    #[serde(rename = "termOfPaymentId", skip_serializing_if = "Option::is_none")]
    pub term_of_payment_id: Option<String>,
    #[serde(
        rename = "terminationReasonId",
        skip_serializing_if = "Option::is_none"
    )]
    pub termination_reason_id: Option<String>,
    #[serde(
        rename = "ticketServiceLevelAgreementId",
        skip_serializing_if = "Option::is_none"
    )]
    pub ticket_service_level_agreement_id: Option<String>,
    #[serde(rename = "types", skip_serializing_if = "Option::is_none")]
    pub types: Option<Vec<crate::models::OnlyId>>,
    #[serde(rename = "unlimited", skip_serializing_if = "Option::is_none")]
    pub unlimited: Option<bool>,
}

impl Contract {
    pub fn new(contract_status: ContractStatus) -> Contract {
        Contract {
            id: None,
            version: None,
            additional_addresses: None,
            authorization_unit_id: None,
            automatic_extension: None,
            bill_until: None,
            billing_day: None,
            billing_target_invoice_status: None,
            billing_type: None,
            cancellation_date: None,
            cancellation_period_quantity: None,
            cancellation_period_softframe: None,
            cancellation_period_unit: None,
            commercial_language: None,
            commission: None,
            commission_sales_partners: None,
            contract_date: None,
            contract_items: None,
            contract_number: None,
            contract_number_at_party: None,
            contract_status,
            correspondence_address: None,
            created_date: None,
            custom_attributes: None,
            delivery_address: None,
            delivery_email_addresses: None,
            description: None,
            differing_correspondence_address: None,
            differing_delivery_address: None,
            differing_invoice_address: None,
            disable_email_template: None,
            end_date: None,
            extension_quantity: None,
            extension_unit: None,
            factoring: None,
            invoice_address: None,
            invoice_recipient_id: None,
            last_modified_date: None,
            latest_cancellation_warning_quantity: None,
            latest_cancellation_warning_unit: None,
            latest_possible_termination_date: None,
            name: None,
            next_contract_billing_date: None,
            non_standard_input_tax_id: None,
            order_number_at_customer: None,
            party_id: None,
            payment_method_id: None,
            pricing_date: None,
            purchase_email_addresses: None,
            record_comment: None,
            record_currency_id: None,
            record_currency_name: None,
            record_email_addresses: None,
            record_free_text: None,
            record_opening: None,
            reminder_date: None,
            reminder_send_type: None,
            reminder_type: None,
            responsible_user_id: None,
            sales_channel: None,
            sales_invoice_email_addresses: None,
            sales_order_email_addresses: None,
            sent_to_recipient: None,
            start_date: None,
            tags: None,
            template: None,
            term_of_payment_id: None,
            termination_reason_id: None,
            ticket_service_level_agreement_id: None,
            types: None,
            unlimited: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BillUntil {
    #[serde(rename = "CURRENT_MONTH_1")]
    CurrentMonth1,
    #[serde(rename = "CURRENT_MONTH_10")]
    CurrentMonth10,
    #[serde(rename = "CURRENT_MONTH_11")]
    CurrentMonth11,
    #[serde(rename = "CURRENT_MONTH_12")]
    CurrentMonth12,
    #[serde(rename = "CURRENT_MONTH_13")]
    CurrentMonth13,
    #[serde(rename = "CURRENT_MONTH_14")]
    CurrentMonth14,
    #[serde(rename = "CURRENT_MONTH_15")]
    CurrentMonth15,
    #[serde(rename = "CURRENT_MONTH_16")]
    CurrentMonth16,
    #[serde(rename = "CURRENT_MONTH_17")]
    CurrentMonth17,
    #[serde(rename = "CURRENT_MONTH_18")]
    CurrentMonth18,
    #[serde(rename = "CURRENT_MONTH_19")]
    CurrentMonth19,
    #[serde(rename = "CURRENT_MONTH_2")]
    CurrentMonth2,
    #[serde(rename = "CURRENT_MONTH_20")]
    CurrentMonth20,
    #[serde(rename = "CURRENT_MONTH_21")]
    CurrentMonth21,
    #[serde(rename = "CURRENT_MONTH_22")]
    CurrentMonth22,
    #[serde(rename = "CURRENT_MONTH_23")]
    CurrentMonth23,
    #[serde(rename = "CURRENT_MONTH_24")]
    CurrentMonth24,
    #[serde(rename = "CURRENT_MONTH_25")]
    CurrentMonth25,
    #[serde(rename = "CURRENT_MONTH_26")]
    CurrentMonth26,
    #[serde(rename = "CURRENT_MONTH_27")]
    CurrentMonth27,
    #[serde(rename = "CURRENT_MONTH_28")]
    CurrentMonth28,
    #[serde(rename = "CURRENT_MONTH_29")]
    CurrentMonth29,
    #[serde(rename = "CURRENT_MONTH_3")]
    CurrentMonth3,
    #[serde(rename = "CURRENT_MONTH_30")]
    CurrentMonth30,
    #[serde(rename = "CURRENT_MONTH_31")]
    CurrentMonth31,
    #[serde(rename = "CURRENT_MONTH_4")]
    CurrentMonth4,
    #[serde(rename = "CURRENT_MONTH_5")]
    CurrentMonth5,
    #[serde(rename = "CURRENT_MONTH_6")]
    CurrentMonth6,
    #[serde(rename = "CURRENT_MONTH_7")]
    CurrentMonth7,
    #[serde(rename = "CURRENT_MONTH_8")]
    CurrentMonth8,
    #[serde(rename = "CURRENT_MONTH_9")]
    CurrentMonth9,
    #[serde(rename = "NEXT_MONTH_1")]
    NextMonth1,
    #[serde(rename = "NEXT_MONTH_10")]
    NextMonth10,
    #[serde(rename = "NEXT_MONTH_11")]
    NextMonth11,
    #[serde(rename = "NEXT_MONTH_12")]
    NextMonth12,
    #[serde(rename = "NEXT_MONTH_13")]
    NextMonth13,
    #[serde(rename = "NEXT_MONTH_14")]
    NextMonth14,
    #[serde(rename = "NEXT_MONTH_15")]
    NextMonth15,
    #[serde(rename = "NEXT_MONTH_16")]
    NextMonth16,
    #[serde(rename = "NEXT_MONTH_17")]
    NextMonth17,
    #[serde(rename = "NEXT_MONTH_18")]
    NextMonth18,
    #[serde(rename = "NEXT_MONTH_19")]
    NextMonth19,
    #[serde(rename = "NEXT_MONTH_2")]
    NextMonth2,
    #[serde(rename = "NEXT_MONTH_20")]
    NextMonth20,
    #[serde(rename = "NEXT_MONTH_21")]
    NextMonth21,
    #[serde(rename = "NEXT_MONTH_22")]
    NextMonth22,
    #[serde(rename = "NEXT_MONTH_23")]
    NextMonth23,
    #[serde(rename = "NEXT_MONTH_24")]
    NextMonth24,
    #[serde(rename = "NEXT_MONTH_25")]
    NextMonth25,
    #[serde(rename = "NEXT_MONTH_26")]
    NextMonth26,
    #[serde(rename = "NEXT_MONTH_27")]
    NextMonth27,
    #[serde(rename = "NEXT_MONTH_28")]
    NextMonth28,
    #[serde(rename = "NEXT_MONTH_29")]
    NextMonth29,
    #[serde(rename = "NEXT_MONTH_3")]
    NextMonth3,
    #[serde(rename = "NEXT_MONTH_30")]
    NextMonth30,
    #[serde(rename = "NEXT_MONTH_31")]
    NextMonth31,
    #[serde(rename = "NEXT_MONTH_4")]
    NextMonth4,
    #[serde(rename = "NEXT_MONTH_5")]
    NextMonth5,
    #[serde(rename = "NEXT_MONTH_6")]
    NextMonth6,
    #[serde(rename = "NEXT_MONTH_7")]
    NextMonth7,
    #[serde(rename = "NEXT_MONTH_8")]
    NextMonth8,
    #[serde(rename = "NEXT_MONTH_9")]
    NextMonth9,
}

impl Default for BillUntil {
    fn default() -> BillUntil {
        Self::CurrentMonth1
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BillingTargetInvoiceStatus {
    #[serde(rename = "BOOKED")]
    Booked,
    #[serde(rename = "DOCUMENT_CREATED")]
    DocumentCreated,
    #[serde(rename = "NEW")]
    New,
    #[serde(rename = "OPEN_ITEM_CREATED")]
    OpenItemCreated,
}

impl Default for BillingTargetInvoiceStatus {
    fn default() -> BillingTargetInvoiceStatus {
        Self::Booked
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BillingType {
    #[serde(rename = "INVOICE_AFTER")]
    InvoiceAfter,
    #[serde(rename = "INVOICE_BEFORE")]
    InvoiceBefore,
    #[serde(rename = "NONE")]
    None,
    #[serde(rename = "NOT_INVOICEABLE")]
    NotInvoiceable,
    #[serde(rename = "SALES_ORDER")]
    SalesOrder,
}

impl Default for BillingType {
    fn default() -> BillingType {
        Self::InvoiceAfter
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CancellationPeriodSoftframe {
    #[serde(rename = "CONTRACT_END")]
    ContractEnd,
    #[serde(rename = "END_OF_CALENDAR_YEAR")]
    EndOfCalendarYear,
    #[serde(rename = "END_OF_CONTRACT_YEAR")]
    EndOfContractYear,
    #[serde(rename = "END_OF_MONTH")]
    EndOfMonth,
    #[serde(rename = "END_OF_QUARTER")]
    EndOfQuarter,
    #[serde(rename = "FIFTEENTH_OF_MONTH")]
    FifteenthOfMonth,
    #[serde(rename = "FIFTEENTH_OR_END_OF_MONTH")]
    FifteenthOrEndOfMonth,
    #[serde(rename = "HALF_OF_CALENDAR_YEAR")]
    HalfOfCalendarYear,
}

impl Default for CancellationPeriodSoftframe {
    fn default() -> CancellationPeriodSoftframe {
        Self::ContractEnd
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CancellationPeriodUnit {
    #[serde(rename = "DAY")]
    Day,
    #[serde(rename = "MONTH")]
    Month,
    #[serde(rename = "WEEK")]
    Week,
    #[serde(rename = "YEAR")]
    Year,
}

impl Default for CancellationPeriodUnit {
    fn default() -> CancellationPeriodUnit {
        Self::Day
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ContractStatus {
    #[serde(rename = "ACTIVE")]
    Active,
    #[serde(rename = "DRAFT")]
    Draft,
    #[serde(rename = "INACTIVE")]
    Inactive,
}

impl Default for ContractStatus {
    fn default() -> ContractStatus {
        Self::Active
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ExtensionUnit {
    #[serde(rename = "DAY")]
    Day,
    #[serde(rename = "MONTH")]
    Month,
    #[serde(rename = "WEEK")]
    Week,
    #[serde(rename = "YEAR")]
    Year,
}

impl Default for ExtensionUnit {
    fn default() -> ExtensionUnit {
        Self::Day
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LatestCancellationWarningUnit {
    #[serde(rename = "DAY")]
    Day,
    #[serde(rename = "MONTH")]
    Month,
    #[serde(rename = "WEEK")]
    Week,
    #[serde(rename = "YEAR")]
    Year,
}

impl Default for LatestCancellationWarningUnit {
    fn default() -> LatestCancellationWarningUnit {
        Self::Day
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReminderSendType {
    #[serde(rename = "MAIL")]
    Mail,
    #[serde(rename = "NOTIFICATION")]
    Notification,
}

impl Default for ReminderSendType {
    fn default() -> ReminderSendType {
        Self::Mail
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReminderType {
    #[serde(rename = "AUTOMATIC_REMINDER")]
    AutomaticReminder,
    #[serde(rename = "DATE_REMINDER")]
    DateReminder,
    #[serde(rename = "NO_REMINDER")]
    NoReminder,
}

impl Default for ReminderType {
    fn default() -> ReminderType {
        Self::AutomaticReminder
    }
}
