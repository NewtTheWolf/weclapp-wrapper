/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CustomAttributeDefinition {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "active", skip_serializing_if = "Option::is_none")]
    pub active: Option<bool>,
    #[serde(
        rename = "attributeDescription",
        skip_serializing_if = "Option::is_none"
    )]
    pub attribute_description: Option<String>,
    #[serde(
        rename = "attributeEntityType",
        skip_serializing_if = "Option::is_none"
    )]
    pub attribute_entity_type: Option<AttributeEntityType>,
    #[serde(rename = "attributeKey")]
    pub attribute_key: String,
    #[serde(rename = "attributeLabels", skip_serializing_if = "Option::is_none")]
    pub attribute_labels: Option<Vec<crate::models::CustomAttributeDefinitionLabel>>,
    #[serde(rename = "attributeType")]
    pub attribute_type: AttributeType,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(
        rename = "defaultBooleanValue",
        skip_serializing_if = "Option::is_none"
    )]
    pub default_boolean_value: Option<bool>,
    #[serde(rename = "defaultDateValue", skip_serializing_if = "Option::is_none")]
    pub default_date_value: Option<i32>,
    #[serde(rename = "defaultNumberValue", skip_serializing_if = "Option::is_none")]
    pub default_number_value: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "defaultStringValue", skip_serializing_if = "Option::is_none")]
    pub default_string_value: Option<String>,
    #[serde(rename = "entities", skip_serializing_if = "Option::is_none")]
    pub entities: Option<Vec<String>>,
    #[serde(rename = "groupName", skip_serializing_if = "Option::is_none")]
    pub group_name: Option<String>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(rename = "legacyEntities", skip_serializing_if = "Option::is_none")]
    pub legacy_entities: Option<Vec<String>>,
    #[serde(rename = "mandatory", skip_serializing_if = "Option::is_none")]
    pub mandatory: Option<bool>,
    #[serde(rename = "publicPageTypes", skip_serializing_if = "Option::is_none")]
    pub public_page_types: Option<Vec<PublicPageTypes>>,
    #[serde(rename = "readOnly", skip_serializing_if = "Option::is_none")]
    pub read_only: Option<bool>,
    #[serde(rename = "selectableValues", skip_serializing_if = "Option::is_none")]
    pub selectable_values: Option<Vec<crate::models::CustomAttributeDefinitionListValue>>,
    #[serde(rename = "showInOverview", skip_serializing_if = "Option::is_none")]
    pub show_in_overview: Option<bool>,
    #[serde(
        rename = "showOnCreationDialog",
        skip_serializing_if = "Option::is_none"
    )]
    pub show_on_creation_dialog: Option<bool>,
    #[serde(
        rename = "systemCustomAttribute",
        skip_serializing_if = "Option::is_none"
    )]
    pub system_custom_attribute: Option<bool>,
}

impl CustomAttributeDefinition {
    pub fn new(attribute_key: String, attribute_type: AttributeType) -> CustomAttributeDefinition {
        CustomAttributeDefinition {
            id: None,
            version: None,
            active: None,
            attribute_description: None,
            attribute_entity_type: None,
            attribute_key,
            attribute_labels: None,
            attribute_type,
            created_date: None,
            default_boolean_value: None,
            default_date_value: None,
            default_number_value: None,
            default_string_value: None,
            entities: None,
            group_name: None,
            last_modified_date: None,
            legacy_entities: None,
            mandatory: None,
            public_page_types: None,
            read_only: None,
            selectable_values: None,
            show_in_overview: None,
            show_on_creation_dialog: None,
            system_custom_attribute: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AttributeEntityType {
    #[serde(rename = "article")]
    Article,
    #[serde(rename = "blanketPurchaseOrder")]
    BlanketPurchaseOrder,
    #[serde(rename = "campaign")]
    Campaign,
    #[serde(rename = "contract")]
    Contract,
    #[serde(rename = "customer")]
    Customer,
    #[serde(rename = "incomingGoods")]
    IncomingGoods,
    #[serde(rename = "opportunity")]
    Opportunity,
    #[serde(rename = "party")]
    Party,
    #[serde(rename = "performanceRecord")]
    PerformanceRecord,
    #[serde(rename = "productionOrder")]
    ProductionOrder,
    #[serde(rename = "project")]
    Project,
    #[serde(rename = "purchaseInvoice")]
    PurchaseInvoice,
    #[serde(rename = "purchaseOrder")]
    PurchaseOrder,
    #[serde(rename = "quotation")]
    Quotation,
    #[serde(rename = "recurringInvoice")]
    RecurringInvoice,
    #[serde(rename = "salesInvoice")]
    SalesInvoice,
    #[serde(rename = "salesOrder")]
    SalesOrder,
    #[serde(rename = "serialNumber")]
    SerialNumber,
    #[serde(rename = "shipment")]
    Shipment,
    #[serde(rename = "supplier")]
    Supplier,
    #[serde(rename = "ticket")]
    Ticket,
    #[serde(rename = "user")]
    User,
}

impl Default for AttributeEntityType {
    fn default() -> AttributeEntityType {
        Self::Article
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AttributeType {
    #[serde(rename = "BOOLEAN")]
    Boolean,
    #[serde(rename = "DATE")]
    Date,
    #[serde(rename = "DECIMAL")]
    Decimal,
    #[serde(rename = "ENTITY")]
    Entity,
    #[serde(rename = "INTEGER")]
    Integer,
    #[serde(rename = "LARGE_TEXT")]
    LargeText,
    #[serde(rename = "LIST")]
    List,
    #[serde(rename = "MULTISELECT_LIST")]
    MultiselectList,
    #[serde(rename = "REFERENCE")]
    Reference,
    #[serde(rename = "STRING")]
    String,
    #[serde(rename = "URL")]
    Url,
}

impl Default for AttributeType {
    fn default() -> AttributeType {
        Self::Boolean
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PublicPageTypes {
    #[serde(rename = "PURCHASE_ORDER_REQUEST")]
    PurchaseOrderRequest,
    #[serde(rename = "QUOTATION")]
    Quotation,
}

impl Default for PublicPageTypes {
    fn default() -> PublicPageTypes {
        Self::PurchaseOrderRequest
    }
}
