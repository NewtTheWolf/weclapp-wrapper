/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FinancialYear {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "periods", skip_serializing_if = "Option::is_none")]
    pub periods: Option<Vec<crate::models::Period>>,
    #[serde(rename = "status")]
    pub status: Status,
    #[serde(rename = "validFrom", skip_serializing_if = "Option::is_none")]
    pub valid_from: Option<i32>,
    #[serde(rename = "validTo", skip_serializing_if = "Option::is_none")]
    pub valid_to: Option<i32>,
}

impl FinancialYear {
    pub fn new(name: String, status: Status) -> FinancialYear {
        FinancialYear {
            id: None,
            version: None,
            created_date: None,
            last_modified_date: None,
            name,
            periods: None,
            status,
            valid_from: None,
            valid_to: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "CLOSED")]
    Closed,
    #[serde(rename = "CURRENT")]
    Current,
    #[serde(rename = "PLANNED")]
    Planned,
    #[serde(rename = "PRELIMINARY_CLOSED")]
    PreliminaryClosed,
}

impl Default for Status {
    fn default() -> Status {
        Self::Closed
    }
}
