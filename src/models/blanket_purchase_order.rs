/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BlanketPurchaseOrder {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "articleId")]
    pub article_id: String,
    #[serde(
        rename = "blanketPurchaseOrderNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub blanket_purchase_order_number: Option<String>,
    #[serde(rename = "calculationMode", skip_serializing_if = "Option::is_none")]
    pub calculation_mode: Option<CalculationMode>,
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    #[serde(rename = "commercialLanguage", skip_serializing_if = "Option::is_none")]
    pub commercial_language: Option<String>,
    #[serde(rename = "confirmationNumber", skip_serializing_if = "Option::is_none")]
    pub confirmation_number: Option<String>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(rename = "customAttributes", skip_serializing_if = "Option::is_none")]
    pub custom_attributes: Option<Vec<crate::models::CustomAttribute>>,
    #[serde(rename = "deliveryAddress", skip_serializing_if = "Option::is_none")]
    pub delivery_address: Option<Box<crate::models::RecordAddress>>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "discountPercentage", skip_serializing_if = "Option::is_none")]
    pub discount_percentage: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "endDate", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<i32>,
    #[serde(
        rename = "formSettingsFromDistributionChannel",
        skip_serializing_if = "Option::is_none"
    )]
    pub form_settings_from_distribution_channel: Option<String>,
    #[serde(rename = "headerDiscount", skip_serializing_if = "Option::is_none")]
    pub header_discount: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "headerSurcharge", skip_serializing_if = "Option::is_none")]
    pub header_surcharge: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "invoiceAddress", skip_serializing_if = "Option::is_none")]
    pub invoice_address: Option<Box<crate::models::RecordAddress>>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(rename = "nonStandardTaxId", skip_serializing_if = "Option::is_none")]
    pub non_standard_tax_id: Option<String>,
    #[serde(rename = "orderDate", skip_serializing_if = "Option::is_none")]
    pub order_date: Option<i32>,
    #[serde(rename = "orderQuantity", skip_serializing_if = "Option::is_none")]
    pub order_quantity: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "paymentMethodId", skip_serializing_if = "Option::is_none")]
    pub payment_method_id: Option<String>,
    #[serde(
        rename = "recipientCountryCode",
        skip_serializing_if = "Option::is_none"
    )]
    pub recipient_country_code: Option<String>,
    #[serde(rename = "recordAddress", skip_serializing_if = "Option::is_none")]
    pub record_address: Option<Box<crate::models::RecordAddress>>,
    #[serde(rename = "recordComment", skip_serializing_if = "Option::is_none")]
    pub record_comment: Option<String>,
    #[serde(rename = "recordCurrencyId", skip_serializing_if = "Option::is_none")]
    pub record_currency_id: Option<String>,
    #[serde(
        rename = "recordEmailAddresses",
        skip_serializing_if = "Option::is_none"
    )]
    pub record_email_addresses: Option<Box<crate::models::EmailAddresses>>,
    #[serde(rename = "recordFreeText", skip_serializing_if = "Option::is_none")]
    pub record_free_text: Option<String>,
    #[serde(rename = "recordOpening", skip_serializing_if = "Option::is_none")]
    pub record_opening: Option<String>,
    #[serde(rename = "releases", skip_serializing_if = "Option::is_none")]
    pub releases: Option<Vec<crate::models::Releases>>,
    #[serde(rename = "residualQuantity", skip_serializing_if = "Option::is_none")]
    pub residual_quantity: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "responsibleUserId", skip_serializing_if = "Option::is_none")]
    pub responsible_user_id: Option<String>,
    #[serde(rename = "sentToRecipient", skip_serializing_if = "Option::is_none")]
    pub sent_to_recipient: Option<bool>,
    #[serde(rename = "shipmentMethodId", skip_serializing_if = "Option::is_none")]
    pub shipment_method_id: Option<String>,
    #[serde(rename = "startDate", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<i32>,
    #[serde(rename = "status")]
    pub status: Status,
    #[serde(rename = "statusHistory", skip_serializing_if = "Option::is_none")]
    pub status_history: Option<Vec<crate::models::BlanketPurchaseOrderStatusHistory>>,
    #[serde(
        rename = "supplierBlanketPurchaseOrderNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub supplier_blanket_purchase_order_number: Option<String>,
    #[serde(rename = "supplierId")]
    pub supplier_id: String,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "taxId", skip_serializing_if = "Option::is_none")]
    pub tax_id: Option<String>,
    #[serde(rename = "termOfPaymentId", skip_serializing_if = "Option::is_none")]
    pub term_of_payment_id: Option<String>,
    #[serde(rename = "unitPrice", skip_serializing_if = "Option::is_none")]
    pub unit_price: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "useManualUnitPrice", skip_serializing_if = "Option::is_none")]
    pub use_manual_unit_price: Option<bool>,
    #[serde(rename = "warehouseId", skip_serializing_if = "Option::is_none")]
    pub warehouse_id: Option<String>,
}

impl BlanketPurchaseOrder {
    pub fn new(article_id: String, status: Status, supplier_id: String) -> BlanketPurchaseOrder {
        BlanketPurchaseOrder {
            id: None,
            version: None,
            article_id,
            blanket_purchase_order_number: None,
            calculation_mode: None,
            comment: None,
            commercial_language: None,
            confirmation_number: None,
            created_date: None,
            custom_attributes: None,
            delivery_address: None,
            description: None,
            discount_percentage: None,
            end_date: None,
            form_settings_from_distribution_channel: None,
            header_discount: None,
            header_surcharge: None,
            invoice_address: None,
            last_modified_date: None,
            non_standard_tax_id: None,
            order_date: None,
            order_quantity: None,
            payment_method_id: None,
            recipient_country_code: None,
            record_address: None,
            record_comment: None,
            record_currency_id: None,
            record_email_addresses: None,
            record_free_text: None,
            record_opening: None,
            releases: None,
            residual_quantity: None,
            responsible_user_id: None,
            sent_to_recipient: None,
            shipment_method_id: None,
            start_date: None,
            status,
            status_history: None,
            supplier_blanket_purchase_order_number: None,
            supplier_id,
            tags: None,
            tax_id: None,
            term_of_payment_id: None,
            unit_price: None,
            use_manual_unit_price: None,
            warehouse_id: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CalculationMode {
    #[serde(rename = "ROUND_SUMS_TO_0_05")]
    RoundSumsTo005,
}

impl Default for CalculationMode {
    fn default() -> CalculationMode {
        Self::RoundSumsTo005
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "CANCELLED")]
    Cancelled,
    #[serde(rename = "CLOSED")]
    Closed,
    #[serde(rename = "CONFIRMED")]
    Confirmed,
    #[serde(rename = "DOCUMENT_PRINTED")]
    DocumentPrinted,
    #[serde(rename = "NEW")]
    New,
}

impl Default for Status {
    fn default() -> Status {
        Self::Cancelled
    }
}
