/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Article {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "accountId", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<String>,
    #[serde(rename = "accountNumber", skip_serializing_if = "Option::is_none")]
    pub account_number: Option<String>,
    #[serde(rename = "accountingCodeId", skip_serializing_if = "Option::is_none")]
    pub accounting_code_id: Option<String>,
    #[serde(rename = "active", skip_serializing_if = "Option::is_none")]
    pub active: Option<bool>,
    #[serde(rename = "applyCashDiscount", skip_serializing_if = "Option::is_none")]
    pub apply_cash_discount: Option<bool>,
    #[serde(
        rename = "articleAlternativeQuantities",
        skip_serializing_if = "Option::is_none"
    )]
    pub article_alternative_quantities: Option<Vec<crate::models::ArticleAlternativeQuantity>>,
    #[serde(
        rename = "articleCalculationPrices",
        skip_serializing_if = "Option::is_none"
    )]
    pub article_calculation_prices: Option<Vec<crate::models::ArticleCalculationPrice>>,
    #[serde(rename = "articleCategoryId", skip_serializing_if = "Option::is_none")]
    pub article_category_id: Option<String>,
    #[serde(rename = "articleGrossWeight", skip_serializing_if = "Option::is_none")]
    pub article_gross_weight: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "articleHeight", skip_serializing_if = "Option::is_none")]
    pub article_height: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "articleImages", skip_serializing_if = "Option::is_none")]
    pub article_images: Option<Vec<crate::models::ArticleImage>>,
    #[serde(rename = "articleLength", skip_serializing_if = "Option::is_none")]
    pub article_length: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "articleNetWeight", skip_serializing_if = "Option::is_none")]
    pub article_net_weight: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "articleNumber", skip_serializing_if = "Option::is_none")]
    pub article_number: Option<String>,
    #[serde(rename = "articlePrices", skip_serializing_if = "Option::is_none")]
    pub article_prices: Option<Vec<crate::models::ArticlePriceWithoutArticleReference>>,
    #[serde(rename = "articleType", skip_serializing_if = "Option::is_none")]
    pub article_type: Option<ArticleType>,
    #[serde(rename = "articleWidth", skip_serializing_if = "Option::is_none")]
    pub article_width: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(
        rename = "availableForSalesChannels",
        skip_serializing_if = "Option::is_none"
    )]
    pub available_for_sales_channels: Option<Vec<String>>,
    #[serde(rename = "availableInSale", skip_serializing_if = "Option::is_none")]
    pub available_in_sale: Option<bool>,
    #[serde(
        rename = "averageDeliveryTime",
        skip_serializing_if = "Option::is_none"
    )]
    pub average_delivery_time: Option<i32>,
    #[serde(rename = "barcode", skip_serializing_if = "Option::is_none")]
    pub barcode: Option<String>,
    #[serde(
        rename = "batchNumberRequired",
        skip_serializing_if = "Option::is_none"
    )]
    pub batch_number_required: Option<bool>,
    #[serde(
        rename = "billOfMaterialPartDeliveryPossible",
        skip_serializing_if = "Option::is_none"
    )]
    pub bill_of_material_part_delivery_possible: Option<bool>,
    #[serde(rename = "catalogCode", skip_serializing_if = "Option::is_none")]
    pub catalog_code: Option<String>,
    #[serde(
        rename = "contractBillingCycle",
        skip_serializing_if = "Option::is_none"
    )]
    pub contract_billing_cycle: Option<ContractBillingCycle>,
    #[serde(
        rename = "contractBillingMode",
        skip_serializing_if = "Option::is_none"
    )]
    pub contract_billing_mode: Option<ContractBillingMode>,
    #[serde(
        rename = "countryOfOriginCode",
        skip_serializing_if = "Option::is_none"
    )]
    pub country_of_origin_code: Option<String>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(rename = "customAttributes", skip_serializing_if = "Option::is_none")]
    pub custom_attributes: Option<Vec<crate::models::CustomAttribute>>,
    #[serde(rename = "customsDescription", skip_serializing_if = "Option::is_none")]
    pub customs_description: Option<String>,
    #[serde(
        rename = "customsTariffNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub customs_tariff_number: Option<String>,
    #[serde(
        rename = "customsTariffNumberId",
        skip_serializing_if = "Option::is_none"
    )]
    pub customs_tariff_number_id: Option<String>,
    #[serde(
        rename = "defaultPriceCalculationType",
        skip_serializing_if = "Option::is_none"
    )]
    pub default_price_calculation_type: Option<DefaultPriceCalculationType>,
    #[serde(
        rename = "defaultWarehouseLevels",
        skip_serializing_if = "Option::is_none"
    )]
    pub default_warehouse_levels: Option<Vec<crate::models::OnlyId>>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "ean", skip_serializing_if = "Option::is_none")]
    pub ean: Option<String>,
    #[serde(rename = "expenseAccountId", skip_serializing_if = "Option::is_none")]
    pub expense_account_id: Option<String>,
    #[serde(
        rename = "expenseAccountNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub expense_account_number: Option<String>,
    #[serde(rename = "expirationDays", skip_serializing_if = "Option::is_none")]
    pub expiration_days: Option<i32>,
    #[serde(
        rename = "fixedPurchaseQuantity",
        skip_serializing_if = "Option::is_none"
    )]
    pub fixed_purchase_quantity: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "internalNote", skip_serializing_if = "Option::is_none")]
    pub internal_note: Option<String>,
    #[serde(rename = "invoicingType", skip_serializing_if = "Option::is_none")]
    pub invoicing_type: Option<InvoicingType>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(rename = "launchDate", skip_serializing_if = "Option::is_none")]
    pub launch_date: Option<i32>,
    #[serde(rename = "longText", skip_serializing_if = "Option::is_none")]
    pub long_text: Option<String>,
    #[serde(rename = "lowLevelCode", skip_serializing_if = "Option::is_none")]
    pub low_level_code: Option<i32>,
    #[serde(rename = "manufacturerId", skip_serializing_if = "Option::is_none")]
    pub manufacturer_id: Option<String>,
    #[serde(rename = "manufacturerName", skip_serializing_if = "Option::is_none")]
    pub manufacturer_name: Option<String>,
    #[serde(
        rename = "manufacturerPartNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub manufacturer_part_number: Option<String>,
    #[serde(
        rename = "marginCalculationPriceType",
        skip_serializing_if = "Option::is_none"
    )]
    pub margin_calculation_price_type: Option<MarginCalculationPriceType>,
    #[serde(rename = "matchCode", skip_serializing_if = "Option::is_none")]
    pub match_code: Option<String>,
    #[serde(
        rename = "minimumPurchaseQuantity",
        skip_serializing_if = "Option::is_none"
    )]
    pub minimum_purchase_quantity:
        Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(
        rename = "minimumStockQuantity",
        skip_serializing_if = "Option::is_none"
    )]
    pub minimum_stock_quantity: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(
        rename = "plannedWorkingTimePerUnit",
        skip_serializing_if = "Option::is_none"
    )]
    pub planned_working_time_per_unit:
        Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(
        rename = "priceCalculationParameters",
        skip_serializing_if = "Option::is_none"
    )]
    pub price_calculation_parameters: Option<Vec<crate::models::PriceCalculationParameter>>,
    #[serde(
        rename = "procurementLeadDays",
        skip_serializing_if = "Option::is_none"
    )]
    pub procurement_lead_days: Option<i32>,
    #[serde(rename = "producerType", skip_serializing_if = "Option::is_none")]
    pub producer_type: Option<String>,
    #[serde(rename = "productionArticle", skip_serializing_if = "Option::is_none")]
    pub production_article: Option<bool>,
    #[serde(
        rename = "productionBillOfMaterialItems",
        skip_serializing_if = "Option::is_none"
    )]
    pub production_bill_of_material_items: Option<Vec<crate::models::BillOfMaterial>>,
    #[serde(
        rename = "purchaseCostCenterId",
        skip_serializing_if = "Option::is_none"
    )]
    pub purchase_cost_center_id: Option<String>,
    #[serde(
        rename = "purchaseCostCenterNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub purchase_cost_center_number: Option<String>,
    #[serde(
        rename = "quantityConversions",
        skip_serializing_if = "Option::is_none"
    )]
    pub quantity_conversions: Option<Vec<crate::models::QuantityConversion>>,
    #[serde(rename = "ratingId", skip_serializing_if = "Option::is_none")]
    pub rating_id: Option<String>,
    #[serde(rename = "ratingName", skip_serializing_if = "Option::is_none")]
    pub rating_name: Option<String>,
    #[serde(
        rename = "recordItemGroupName",
        skip_serializing_if = "Option::is_none"
    )]
    pub record_item_group_name: Option<String>,
    #[serde(rename = "safetyStockDays", skip_serializing_if = "Option::is_none")]
    pub safety_stock_days: Option<i32>,
    #[serde(
        rename = "salesBillOfMaterialItems",
        skip_serializing_if = "Option::is_none"
    )]
    pub sales_bill_of_material_items: Option<Vec<crate::models::SalesBillOfMaterialArticleItem>>,
    #[serde(rename = "salesCostCenterId", skip_serializing_if = "Option::is_none")]
    pub sales_cost_center_id: Option<String>,
    #[serde(
        rename = "salesCostCenterNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub sales_cost_center_number: Option<String>,
    #[serde(rename = "sellByDate", skip_serializing_if = "Option::is_none")]
    pub sell_by_date: Option<i32>,
    #[serde(rename = "sellFromDate", skip_serializing_if = "Option::is_none")]
    pub sell_from_date: Option<i32>,
    #[serde(
        rename = "serialNumberRequired",
        skip_serializing_if = "Option::is_none"
    )]
    pub serial_number_required: Option<bool>,
    #[serde(rename = "shortDescription1", skip_serializing_if = "Option::is_none")]
    pub short_description1: Option<String>,
    #[serde(rename = "shortDescription2", skip_serializing_if = "Option::is_none")]
    pub short_description2: Option<String>,
    #[serde(rename = "showOnDeliveryNote", skip_serializing_if = "Option::is_none")]
    pub show_on_delivery_note: Option<bool>,
    #[serde(rename = "statusId", skip_serializing_if = "Option::is_none")]
    pub status_id: Option<String>,
    #[serde(rename = "supplySources", skip_serializing_if = "Option::is_none")]
    pub supply_sources: Option<Vec<crate::models::SupplySource>>,
    #[serde(rename = "supportUntilDate", skip_serializing_if = "Option::is_none")]
    pub support_until_date: Option<i32>,
    #[serde(rename = "systemCode", skip_serializing_if = "Option::is_none")]
    pub system_code: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(
        rename = "targetStockQuantity",
        skip_serializing_if = "Option::is_none"
    )]
    pub target_stock_quantity: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "taxRateType", skip_serializing_if = "Option::is_none")]
    pub tax_rate_type: Option<TaxRateType>,
    #[serde(rename = "unitId")]
    pub unit_id: String,
    #[serde(rename = "unitName", skip_serializing_if = "Option::is_none")]
    pub unit_name: Option<String>,
    #[serde(
        rename = "useAvailableForSalesChannels",
        skip_serializing_if = "Option::is_none"
    )]
    pub use_available_for_sales_channels: Option<bool>,
    #[serde(
        rename = "useSalesBillOfMaterialItemPrices",
        skip_serializing_if = "Option::is_none"
    )]
    pub use_sales_bill_of_material_item_prices: Option<bool>,
    #[serde(
        rename = "useSalesBillOfMaterialItemPricesForPurchase",
        skip_serializing_if = "Option::is_none"
    )]
    pub use_sales_bill_of_material_item_prices_for_purchase: Option<bool>,
}

impl Article {
    pub fn new(name: String, unit_id: String) -> Article {
        Article {
            id: None,
            version: None,
            account_id: None,
            account_number: None,
            accounting_code_id: None,
            active: None,
            apply_cash_discount: None,
            article_alternative_quantities: None,
            article_calculation_prices: None,
            article_category_id: None,
            article_gross_weight: None,
            article_height: None,
            article_images: None,
            article_length: None,
            article_net_weight: None,
            article_number: None,
            article_prices: None,
            article_type: None,
            article_width: None,
            available_for_sales_channels: None,
            available_in_sale: None,
            average_delivery_time: None,
            barcode: None,
            batch_number_required: None,
            bill_of_material_part_delivery_possible: None,
            catalog_code: None,
            contract_billing_cycle: None,
            contract_billing_mode: None,
            country_of_origin_code: None,
            created_date: None,
            custom_attributes: None,
            customs_description: None,
            customs_tariff_number: None,
            customs_tariff_number_id: None,
            default_price_calculation_type: None,
            default_warehouse_levels: None,
            description: None,
            ean: None,
            expense_account_id: None,
            expense_account_number: None,
            expiration_days: None,
            fixed_purchase_quantity: None,
            internal_note: None,
            invoicing_type: None,
            last_modified_date: None,
            launch_date: None,
            long_text: None,
            low_level_code: None,
            manufacturer_id: None,
            manufacturer_name: None,
            manufacturer_part_number: None,
            margin_calculation_price_type: None,
            match_code: None,
            minimum_purchase_quantity: None,
            minimum_stock_quantity: None,
            name,
            planned_working_time_per_unit: None,
            price_calculation_parameters: None,
            procurement_lead_days: None,
            producer_type: None,
            production_article: None,
            production_bill_of_material_items: None,
            purchase_cost_center_id: None,
            purchase_cost_center_number: None,
            quantity_conversions: None,
            rating_id: None,
            rating_name: None,
            record_item_group_name: None,
            safety_stock_days: None,
            sales_bill_of_material_items: None,
            sales_cost_center_id: None,
            sales_cost_center_number: None,
            sell_by_date: None,
            sell_from_date: None,
            serial_number_required: None,
            short_description1: None,
            short_description2: None,
            show_on_delivery_note: None,
            status_id: None,
            supply_sources: None,
            support_until_date: None,
            system_code: None,
            tags: None,
            target_stock_quantity: None,
            tax_rate_type: None,
            unit_id,
            unit_name: None,
            use_available_for_sales_channels: None,
            use_sales_bill_of_material_item_prices: None,
            use_sales_bill_of_material_item_prices_for_purchase: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ArticleType {
    #[serde(rename = "BASIC")]
    Basic,
    #[serde(rename = "SALES_BILL_OF_MATERIAL")]
    SalesBillOfMaterial,
    #[serde(rename = "SERVICE")]
    Service,
    #[serde(rename = "SHIPPING_COST")]
    ShippingCost,
    #[serde(rename = "STORABLE")]
    Storable,
}

impl Default for ArticleType {
    fn default() -> ArticleType {
        Self::Basic
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ContractBillingCycle {
    #[serde(rename = "DAILY")]
    Daily,
    #[serde(rename = "FIVE_YEARLY")]
    FiveYearly,
    #[serde(rename = "FOUR_YEARLY")]
    FourYearly,
    #[serde(rename = "HALF_YEARLY")]
    HalfYearly,
    #[serde(rename = "MONTHLY")]
    Monthly,
    #[serde(rename = "NONE")]
    None,
    #[serde(rename = "QUARTER")]
    Quarter,
    #[serde(rename = "THREE_YEARLY")]
    ThreeYearly,
    #[serde(rename = "TWO_YEARLY")]
    TwoYearly,
    #[serde(rename = "WEEKLY")]
    Weekly,
    #[serde(rename = "YEARLY")]
    Yearly,
}

impl Default for ContractBillingCycle {
    fn default() -> ContractBillingCycle {
        Self::Daily
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ContractBillingMode {
    #[serde(rename = "NON_RECURRENT")]
    NonRecurrent,
    #[serde(rename = "RECURRENT")]
    Recurrent,
}

impl Default for ContractBillingMode {
    fn default() -> ContractBillingMode {
        Self::NonRecurrent
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DefaultPriceCalculationType {
    #[serde(rename = "MARGIN_CALCULATION")]
    MarginCalculation,
    #[serde(rename = "PURCHASE")]
    Purchase,
    #[serde(rename = "RECOMMENDED_RETAIL_PRICE")]
    RecommendedRetailPrice,
    #[serde(rename = "SALES")]
    Sales,
}

impl Default for DefaultPriceCalculationType {
    fn default() -> DefaultPriceCalculationType {
        Self::MarginCalculation
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum InvoicingType {
    #[serde(rename = "EFFORT")]
    Effort,
    #[serde(rename = "FIXED_PRICE")]
    FixedPrice,
}

impl Default for InvoicingType {
    fn default() -> InvoicingType {
        Self::Effort
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MarginCalculationPriceType {
    #[serde(rename = "ARTICLE_CALCULATION_PRICE")]
    ArticleCalculationPrice,
    #[serde(rename = "EMPLOYEE_COST")]
    EmployeeCost,
    #[serde(rename = "MOVING_AVERAGE")]
    MovingAverage,
    #[serde(rename = "PURCHASE_PRICE_PRODUCTION_COST")]
    PurchasePriceProductionCost,
}

impl Default for MarginCalculationPriceType {
    fn default() -> MarginCalculationPriceType {
        Self::ArticleCalculationPrice
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TaxRateType {
    #[serde(rename = "REDUCED")]
    Reduced,
    #[serde(rename = "SLIGHTLY_REDUCED")]
    SlightlyReduced,
    #[serde(rename = "STANDARD")]
    Standard,
    #[serde(rename = "SUPER_REDUCED")]
    SuperReduced,
    #[serde(rename = "ZERO")]
    Zero,
}

impl Default for TaxRateType {
    fn default() -> TaxRateType {
        Self::Reduced
    }
}
