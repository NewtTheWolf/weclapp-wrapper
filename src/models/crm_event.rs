/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CrmEvent {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "callCategoryId", skip_serializing_if = "Option::is_none")]
    pub call_category_id: Option<String>,
    #[serde(rename = "contactId", skip_serializing_if = "Option::is_none")]
    pub contact_id: Option<String>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(rename = "creatorUserId", skip_serializing_if = "Option::is_none")]
    pub creator_user_id: Option<String>,
    #[serde(rename = "customAttributes", skip_serializing_if = "Option::is_none")]
    pub custom_attributes: Option<Vec<crate::models::CustomAttribute>>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "endDate", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<i32>,
    #[serde(rename = "eventCategoryId", skip_serializing_if = "Option::is_none")]
    pub event_category_id: Option<String>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(rename = "location", skip_serializing_if = "Option::is_none")]
    pub location: Option<String>,
    #[serde(rename = "opportunityId", skip_serializing_if = "Option::is_none")]
    pub opportunity_id: Option<String>,
    #[serde(rename = "partyId")]
    pub party_id: String,
    #[serde(rename = "startDate", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<i32>,
    #[serde(rename = "subject")]
    pub subject: String,
    #[serde(rename = "type")]
    pub r#type: RHashType,
}

impl CrmEvent {
    pub fn new(party_id: String, subject: String, r#type: RHashType) -> CrmEvent {
        CrmEvent {
            id: None,
            version: None,
            call_category_id: None,
            contact_id: None,
            created_date: None,
            creator_user_id: None,
            custom_attributes: None,
            description: None,
            end_date: None,
            event_category_id: None,
            last_modified_date: None,
            location: None,
            opportunity_id: None,
            party_id,
            start_date: None,
            subject,
            r#type,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "GENERAL")]
    General,
    #[serde(rename = "INCOMING_CALL")]
    IncomingCall,
    #[serde(rename = "LETTER")]
    Letter,
    #[serde(rename = "OUTGOING_CALL")]
    OutgoingCall,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::General
    }
}
