/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PurchaseOrderRequest {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "commercialLanguage", skip_serializing_if = "Option::is_none")]
    pub commercial_language: Option<String>,
    #[serde(
        rename = "confirmationDeadline",
        skip_serializing_if = "Option::is_none"
    )]
    pub confirmation_deadline: Option<i32>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(rename = "customAttributes", skip_serializing_if = "Option::is_none")]
    pub custom_attributes: Option<Vec<crate::models::CustomAttribute>>,
    #[serde(rename = "deliveryAddress", skip_serializing_if = "Option::is_none")]
    pub delivery_address: Option<Box<crate::models::RecordAddress>>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(
        rename = "disableEmailTemplate",
        skip_serializing_if = "Option::is_none"
    )]
    pub disable_email_template: Option<bool>,
    #[serde(rename = "invoiceAddress", skip_serializing_if = "Option::is_none")]
    pub invoice_address: Option<Box<crate::models::RecordAddress>>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(
        rename = "plannedDeliveryDate",
        skip_serializing_if = "Option::is_none"
    )]
    pub planned_delivery_date: Option<i32>,
    #[serde(
        rename = "purchaseOrderRequestItems",
        skip_serializing_if = "Option::is_none"
    )]
    pub purchase_order_request_items: Option<Vec<crate::models::PurchaseOrderRequestItem>>,
    #[serde(rename = "purchaseOrderRequestNumber")]
    pub purchase_order_request_number: String,
    #[serde(
        rename = "purchaseOrderRequestOffers",
        skip_serializing_if = "Option::is_none"
    )]
    pub purchase_order_request_offers: Option<Vec<crate::models::PurchaseOrderRequestOffer>>,
    #[serde(rename = "purchaseOrderRequestType")]
    pub purchase_order_request_type: PurchaseOrderRequestType,
    #[serde(rename = "quotationId", skip_serializing_if = "Option::is_none")]
    pub quotation_id: Option<String>,
    #[serde(rename = "quotationNumber", skip_serializing_if = "Option::is_none")]
    pub quotation_number: Option<String>,
    #[serde(rename = "recordAddress", skip_serializing_if = "Option::is_none")]
    pub record_address: Option<Box<crate::models::RecordAddress>>,
    #[serde(rename = "recordComment", skip_serializing_if = "Option::is_none")]
    pub record_comment: Option<String>,
    #[serde(rename = "recordFreeText", skip_serializing_if = "Option::is_none")]
    pub record_free_text: Option<String>,
    #[serde(rename = "recordOpening", skip_serializing_if = "Option::is_none")]
    pub record_opening: Option<String>,
    #[serde(rename = "responsibleUserId", skip_serializing_if = "Option::is_none")]
    pub responsible_user_id: Option<String>,
    #[serde(
        rename = "responsibleUserUsername",
        skip_serializing_if = "Option::is_none"
    )]
    pub responsible_user_username: Option<String>,
    #[serde(rename = "salesOrderId", skip_serializing_if = "Option::is_none")]
    pub sales_order_id: Option<String>,
    #[serde(rename = "salesOrderNumber", skip_serializing_if = "Option::is_none")]
    pub sales_order_number: Option<String>,
    #[serde(rename = "sentToRecipient", skip_serializing_if = "Option::is_none")]
    pub sent_to_recipient: Option<bool>,
    #[serde(rename = "status")]
    pub status: Status,
    #[serde(rename = "statusHistory", skip_serializing_if = "Option::is_none")]
    pub status_history: Option<Vec<crate::models::PurchaseOrderRequestStatusHistory>>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "warehouseId", skip_serializing_if = "Option::is_none")]
    pub warehouse_id: Option<String>,
    #[serde(rename = "warehouseName", skip_serializing_if = "Option::is_none")]
    pub warehouse_name: Option<String>,
}

impl PurchaseOrderRequest {
    pub fn new(
        purchase_order_request_number: String,
        purchase_order_request_type: PurchaseOrderRequestType,
        status: Status,
    ) -> PurchaseOrderRequest {
        PurchaseOrderRequest {
            id: None,
            version: None,
            commercial_language: None,
            confirmation_deadline: None,
            created_date: None,
            custom_attributes: None,
            delivery_address: None,
            description: None,
            disable_email_template: None,
            invoice_address: None,
            last_modified_date: None,
            planned_delivery_date: None,
            purchase_order_request_items: None,
            purchase_order_request_number,
            purchase_order_request_offers: None,
            purchase_order_request_type,
            quotation_id: None,
            quotation_number: None,
            record_address: None,
            record_comment: None,
            record_free_text: None,
            record_opening: None,
            responsible_user_id: None,
            responsible_user_username: None,
            sales_order_id: None,
            sales_order_number: None,
            sent_to_recipient: None,
            status,
            status_history: None,
            tags: None,
            warehouse_id: None,
            warehouse_name: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PurchaseOrderRequestType {
    #[serde(rename = "BLANKET_ORDER_REQUEST")]
    BlanketOrderRequest,
    #[serde(rename = "DROP_SHIPPING_REQUEST")]
    DropShippingRequest,
    #[serde(rename = "PURCHASE_ORDER_REQUEST")]
    PurchaseOrderRequest,
    #[serde(rename = "SALES_ORDER_COMMISSION_REQUEST")]
    SalesOrderCommissionRequest,
}

impl Default for PurchaseOrderRequestType {
    fn default() -> PurchaseOrderRequestType {
        Self::BlanketOrderRequest
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "CANCELLED")]
    Cancelled,
    #[serde(rename = "CLOSED")]
    Closed,
    #[serde(rename = "DOCUMENT_PRINTED")]
    DocumentPrinted,
    #[serde(rename = "NEW")]
    New,
    #[serde(rename = "OFFER_RECEIVED")]
    OfferReceived,
}

impl Default for Status {
    fn default() -> Status {
        Self::Cancelled
    }
}
