/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ArticlePrice {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "articleId")]
    pub article_id: String,
    #[serde(rename = "articleNumber", skip_serializing_if = "Option::is_none")]
    pub article_number: Option<String>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(rename = "currencyId")]
    pub currency_id: String,
    #[serde(rename = "currencyName", skip_serializing_if = "Option::is_none")]
    pub currency_name: Option<String>,
    #[serde(rename = "customerId", skip_serializing_if = "Option::is_none")]
    pub customer_id: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(
        rename = "distributionChannel",
        skip_serializing_if = "Option::is_none"
    )]
    pub distribution_channel: Option<String>,
    #[serde(rename = "endDate", skip_serializing_if = "Option::is_none")]
    pub end_date: Option<i32>,
    #[serde(
        rename = "lastModifiedByUserId",
        skip_serializing_if = "Option::is_none"
    )]
    pub last_modified_by_user_id: Option<String>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(rename = "positionNumber", skip_serializing_if = "Option::is_none")]
    pub position_number: Option<i32>,
    #[serde(rename = "price")]
    pub price: crate::models::custom_attribute_definition::AttributeType,
    #[serde(rename = "priceScaleType")]
    pub price_scale_type: PriceScaleType,
    #[serde(rename = "priceScaleValue")]
    pub price_scale_value: crate::models::custom_attribute_definition::AttributeType,
    #[serde(rename = "reductionAdditions", skip_serializing_if = "Option::is_none")]
    pub reduction_additions: Option<Vec<crate::models::ReductionAddition>>,
    #[serde(rename = "salesChannel")]
    pub sales_channel: String,
    #[serde(rename = "startDate", skip_serializing_if = "Option::is_none")]
    pub start_date: Option<i32>,
}

impl ArticlePrice {
    pub fn new(
        article_id: String,
        currency_id: String,
        price: crate::models::custom_attribute_definition::AttributeType,
        price_scale_type: PriceScaleType,
        price_scale_value: crate::models::custom_attribute_definition::AttributeType,
        sales_channel: String,
    ) -> ArticlePrice {
        ArticlePrice {
            id: None,
            version: None,
            article_id,
            article_number: None,
            created_date: None,
            currency_id,
            currency_name: None,
            customer_id: None,
            description: None,
            distribution_channel: None,
            end_date: None,
            last_modified_by_user_id: None,
            last_modified_date: None,
            position_number: None,
            price,
            price_scale_type,
            price_scale_value,
            reduction_additions: None,
            sales_channel,
            start_date: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PriceScaleType {
    #[serde(rename = "SCALE_FROM")]
    From,
    #[serde(rename = "SCALE_TO")]
    To,
}

impl Default for PriceScaleType {
    fn default() -> PriceScaleType {
        Self::From
    }
}
