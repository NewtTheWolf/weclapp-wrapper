/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CalendarEventAttendee {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "attendeeStatus", skip_serializing_if = "Option::is_none")]
    pub attendee_status: Option<AttendeeStatus>,
    #[serde(rename = "calendarEventId", skip_serializing_if = "Option::is_none")]
    pub calendar_event_id: Option<String>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(rename = "eventPermission", skip_serializing_if = "Option::is_none")]
    pub event_permission: Option<EventPermission>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(rename = "userId")]
    pub user_id: String,
}

impl CalendarEventAttendee {
    pub fn new(user_id: String) -> CalendarEventAttendee {
        CalendarEventAttendee {
            id: None,
            version: None,
            attendee_status: None,
            calendar_event_id: None,
            created_date: None,
            event_permission: None,
            last_modified_date: None,
            user_id,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AttendeeStatus {
    #[serde(rename = "ACCEPT")]
    Accept,
    #[serde(rename = "CANCEL")]
    Cancel,
    #[serde(rename = "DECLINE")]
    Decline,
    #[serde(rename = "INVITATION")]
    Invitation,
    #[serde(rename = "TENTATIVE")]
    Tentative,
    #[serde(rename = "UNDEFINED")]
    Undefined,
}

impl Default for AttendeeStatus {
    fn default() -> AttendeeStatus {
        Self::Accept
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EventPermission {
    #[serde(rename = "CAN_MODIFY_EVERYTHING")]
    ModifyEverything,
    #[serde(rename = "CAN_MODIFY_EVERYTHING_BUT_NOT_PARTICIPIENT_LIST")]
    ModifyEverythingButNotParticipientList,
    #[serde(rename = "CAN_MODIFY_ONLY_PARTICIPIENT_LIST")]
    ModifyOnlyParticipientList,
    #[serde(rename = "CAN_NOT_MODIFY_ANYTHING")]
    NotModifyAnything,
}

impl Default for EventPermission {
    fn default() -> EventPermission {
        Self::ModifyEverything
    }
}
