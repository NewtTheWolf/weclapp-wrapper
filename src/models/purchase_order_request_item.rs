/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PurchaseOrderRequestItem {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "articleId", skip_serializing_if = "Option::is_none")]
    pub article_id: Option<String>,
    #[serde(rename = "articleNumber", skip_serializing_if = "Option::is_none")]
    pub article_number: Option<String>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(rename = "deleted", skip_serializing_if = "Option::is_none")]
    pub deleted: Option<bool>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "descriptionFixed", skip_serializing_if = "Option::is_none")]
    pub description_fixed: Option<bool>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(rename = "manualQuantity", skip_serializing_if = "Option::is_none")]
    pub manual_quantity: Option<bool>,
    #[serde(rename = "note", skip_serializing_if = "Option::is_none")]
    pub note: Option<String>,
    #[serde(rename = "parentItemId", skip_serializing_if = "Option::is_none")]
    pub parent_item_id: Option<String>,
    #[serde(rename = "positionNumber", skip_serializing_if = "Option::is_none")]
    pub position_number: Option<i32>,
    #[serde(rename = "priceScaleType", skip_serializing_if = "Option::is_none")]
    pub price_scale_type: Option<PriceScaleType>,
    #[serde(rename = "priceScaleValues", skip_serializing_if = "Option::is_none")]
    pub price_scale_values: Option<Vec<crate::models::custom_attribute_definition::AttributeType>>,
    #[serde(rename = "quantity", skip_serializing_if = "Option::is_none")]
    pub quantity: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "unitId", skip_serializing_if = "Option::is_none")]
    pub unit_id: Option<String>,
    #[serde(rename = "unitName", skip_serializing_if = "Option::is_none")]
    pub unit_name: Option<String>,
}

impl PurchaseOrderRequestItem {
    pub fn new() -> PurchaseOrderRequestItem {
        PurchaseOrderRequestItem {
            id: None,
            version: None,
            article_id: None,
            article_number: None,
            created_date: None,
            deleted: None,
            description: None,
            description_fixed: None,
            last_modified_date: None,
            manual_quantity: None,
            note: None,
            parent_item_id: None,
            position_number: None,
            price_scale_type: None,
            price_scale_values: None,
            quantity: None,
            title: None,
            unit_id: None,
            unit_name: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PriceScaleType {
    #[serde(rename = "SCALE_FROM")]
    From,
    #[serde(rename = "SCALE_TO")]
    To,
}

impl Default for PriceScaleType {
    fn default() -> PriceScaleType {
        Self::From
    }
}
