/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PaymentRunItem {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "amountDiscount", skip_serializing_if = "Option::is_none")]
    pub amount_discount: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "amountPayment", skip_serializing_if = "Option::is_none")]
    pub amount_payment: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "bankAccountId", skip_serializing_if = "Option::is_none")]
    pub bank_account_id: Option<String>,
    #[serde(rename = "cleared", skip_serializing_if = "Option::is_none")]
    pub cleared: Option<bool>,
    #[serde(rename = "conversionRate", skip_serializing_if = "Option::is_none")]
    pub conversion_rate: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "conversionRateDate", skip_serializing_if = "Option::is_none")]
    pub conversion_rate_date: Option<i32>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(rename = "moneyTransaction", skip_serializing_if = "Option::is_none")]
    pub money_transaction: Option<Box<crate::models::MoneyTransaction>>,
    #[serde(rename = "partyBankAccountId", skip_serializing_if = "Option::is_none")]
    pub party_bank_account_id: Option<String>,
    #[serde(rename = "paymentRunId", skip_serializing_if = "Option::is_none")]
    pub payment_run_id: Option<String>,
    #[serde(
        rename = "paymentRunPaymentType",
        skip_serializing_if = "Option::is_none"
    )]
    pub payment_run_payment_type: Option<PaymentRunPaymentType>,
    #[serde(rename = "purchaseOpenItemId", skip_serializing_if = "Option::is_none")]
    pub purchase_open_item_id: Option<Box<crate::models::OnlyId>>,
    #[serde(rename = "purpose", skip_serializing_if = "Option::is_none")]
    pub purpose: Option<String>,
    #[serde(rename = "recordCurrency", skip_serializing_if = "Option::is_none")]
    pub record_currency: Option<Box<crate::models::Currency>>,
}

impl PaymentRunItem {
    pub fn new() -> PaymentRunItem {
        PaymentRunItem {
            id: None,
            version: None,
            amount_discount: None,
            amount_payment: None,
            bank_account_id: None,
            cleared: None,
            conversion_rate: None,
            conversion_rate_date: None,
            created_date: None,
            last_modified_date: None,
            money_transaction: None,
            party_bank_account_id: None,
            payment_run_id: None,
            payment_run_payment_type: None,
            purchase_open_item_id: None,
            purpose: None,
            record_currency: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PaymentRunPaymentType {
    #[serde(rename = "NONE")]
    None,
    #[serde(rename = "ONLINE")]
    Online,
    #[serde(rename = "SEPA")]
    Sepa,
    #[serde(rename = "SWIFT")]
    Swift,
}

impl Default for PaymentRunPaymentType {
    fn default() -> PaymentRunPaymentType {
        Self::None
    }
}
