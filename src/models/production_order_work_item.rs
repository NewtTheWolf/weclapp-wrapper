/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ProductionOrderWorkItem {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "book", skip_serializing_if = "Option::is_none")]
    pub book: Option<bool>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(rename = "customAttributes", skip_serializing_if = "Option::is_none")]
    pub custom_attributes: Option<Vec<crate::models::CustomAttribute>>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(rename = "manualItem", skip_serializing_if = "Option::is_none")]
    pub manual_item: Option<bool>,
    #[serde(rename = "positionNumber", skip_serializing_if = "Option::is_none")]
    pub position_number: Option<i32>,
    #[serde(rename = "shortDescription", skip_serializing_if = "Option::is_none")]
    pub short_description: Option<String>,
    #[serde(rename = "status")]
    pub status: Status,
    #[serde(rename = "targetEndDate", skip_serializing_if = "Option::is_none")]
    pub target_end_date: Option<i32>,
    #[serde(rename = "targetOrderTime", skip_serializing_if = "Option::is_none")]
    pub target_order_time: Option<i64>,
    #[serde(rename = "targetStartDate", skip_serializing_if = "Option::is_none")]
    pub target_start_date: Option<i32>,
    #[serde(rename = "timeType")]
    pub time_type: TimeType,
    #[serde(rename = "unitTime", skip_serializing_if = "Option::is_none")]
    pub unit_time: Option<crate::models::custom_attribute_definition::AttributeType>,
}

impl ProductionOrderWorkItem {
    pub fn new(status: Status, time_type: TimeType) -> ProductionOrderWorkItem {
        ProductionOrderWorkItem {
            id: None,
            version: None,
            book: None,
            created_date: None,
            custom_attributes: None,
            description: None,
            last_modified_date: None,
            manual_item: None,
            position_number: None,
            short_description: None,
            status,
            target_end_date: None,
            target_order_time: None,
            target_start_date: None,
            time_type,
            unit_time: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "BOOKED")]
    Booked,
    #[serde(rename = "CLOSED")]
    Closed,
    #[serde(rename = "OPEN")]
    Open,
}

impl Default for Status {
    fn default() -> Status {
        Self::Booked
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TimeType {
    #[serde(rename = "SINGLE_TIME")]
    SingleTime,
    #[serde(rename = "TIME_PER_UNIT")]
    TimePerUnit,
}

impl Default for TimeType {
    fn default() -> TimeType {
        Self::SingleTime
    }
}
