/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CommissionSalesPartner {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "commissionFix", skip_serializing_if = "Option::is_none")]
    pub commission_fix: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(
        rename = "commissionPercentage",
        skip_serializing_if = "Option::is_none"
    )]
    pub commission_percentage: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "commissionType")]
    pub commission_type: CommissionType,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(rename = "salesPartnerCustomerId")]
    pub sales_partner_customer_id: String,
    #[serde(
        rename = "salesPartnerCustomerNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub sales_partner_customer_number: Option<String>,
}

impl CommissionSalesPartner {
    pub fn new(
        commission_type: CommissionType,
        sales_partner_customer_id: String,
    ) -> CommissionSalesPartner {
        CommissionSalesPartner {
            id: None,
            version: None,
            commission_fix: None,
            commission_percentage: None,
            commission_type,
            created_date: None,
            last_modified_date: None,
            sales_partner_customer_id,
            sales_partner_customer_number: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CommissionType {
    #[serde(rename = "FIX")]
    Fix,
    #[serde(rename = "FIX_AND_MARGIN")]
    FixAndMargin,
    #[serde(rename = "FIX_AND_REVENUE")]
    FixAndRevenue,
    #[serde(rename = "MARGIN")]
    Margin,
    #[serde(rename = "NO_COMMISSION")]
    NoCommission,
    #[serde(rename = "REVENUE")]
    Revenue,
}

impl Default for CommissionType {
    fn default() -> CommissionType {
        Self::Fix
    }
}
