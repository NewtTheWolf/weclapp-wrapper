/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ReductionAdditionItem {
    #[serde(rename = "position", skip_serializing_if = "Option::is_none")]
    pub position: Option<i32>,
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<Source>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<RHashType>,
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<crate::models::custom_attribute_definition::AttributeType>,
}

impl ReductionAdditionItem {
    pub fn new() -> ReductionAdditionItem {
        ReductionAdditionItem {
            position: None,
            source: None,
            r#type: None,
            value: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Source {
    #[serde(rename = "ARTICLE")]
    Article,
    #[serde(rename = "ARTICLE_AND_CUSTOMER")]
    ArticleAndCustomer,
    #[serde(rename = "ARTICLE_CATEGORY")]
    ArticleCategory,
    #[serde(rename = "ARTICLE_CATEGORY_AND_CUSTOMER")]
    ArticleCategoryAndCustomer,
    #[serde(rename = "MANUAL")]
    Manual,
}

impl Default for Source {
    fn default() -> Source {
        Self::Article
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "ADDITION_ABSOLUTE")]
    AdditionAbsolute,
    #[serde(rename = "ADDITION_PERCENT")]
    AdditionPercent,
    #[serde(rename = "REDUCTION_ABSOLUTE")]
    ReductionAbsolute,
    #[serde(rename = "REDUCTION_PERCENT")]
    ReductionPercent,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::AdditionAbsolute
    }
}
