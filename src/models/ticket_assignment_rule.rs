/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TicketAssignmentRule {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "assigneeUserId", skip_serializing_if = "Option::is_none")]
    pub assignee_user_id: Option<String>,
    #[serde(rename = "commercialLanguage", skip_serializing_if = "Option::is_none")]
    pub commercial_language: Option<String>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(
        rename = "distributionChannel",
        skip_serializing_if = "Option::is_none"
    )]
    pub distribution_channel: Option<String>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(rename = "partyId", skip_serializing_if = "Option::is_none")]
    pub party_id: Option<String>,
    #[serde(rename = "responsibleUserId", skip_serializing_if = "Option::is_none")]
    pub responsible_user_id: Option<String>,
    #[serde(rename = "targetStatusId", skip_serializing_if = "Option::is_none")]
    pub target_status_id: Option<String>,
    #[serde(rename = "ticketAssigneeType", skip_serializing_if = "Option::is_none")]
    pub ticket_assignee_type: Option<TicketAssigneeType>,
    #[serde(rename = "ticketCategoryId", skip_serializing_if = "Option::is_none")]
    pub ticket_category_id: Option<String>,
    #[serde(rename = "ticketChannelId", skip_serializing_if = "Option::is_none")]
    pub ticket_channel_id: Option<String>,
    #[serde(rename = "ticketPriorityId", skip_serializing_if = "Option::is_none")]
    pub ticket_priority_id: Option<String>,
    #[serde(rename = "ticketTypeId", skip_serializing_if = "Option::is_none")]
    pub ticket_type_id: Option<String>,
}

impl TicketAssignmentRule {
    pub fn new() -> TicketAssignmentRule {
        TicketAssignmentRule {
            id: None,
            version: None,
            assignee_user_id: None,
            commercial_language: None,
            created_date: None,
            distribution_channel: None,
            last_modified_date: None,
            party_id: None,
            responsible_user_id: None,
            target_status_id: None,
            ticket_assignee_type: None,
            ticket_category_id: None,
            ticket_channel_id: None,
            ticket_priority_id: None,
            ticket_type_id: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TicketAssigneeType {
    #[serde(rename = "CUSTOMER_RESPONSIBLE_PERSON")]
    CustomerResponsiblePerson,
    #[serde(rename = "TICKET_AGENT")]
    TicketAgent,
}

impl Default for TicketAssigneeType {
    fn default() -> TicketAssigneeType {
        Self::CustomerResponsiblePerson
    }
}
