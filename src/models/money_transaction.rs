/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MoneyTransaction {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(
        rename = "accountForCostsOfMonetaryTrafficId",
        skip_serializing_if = "Option::is_none"
    )]
    pub account_for_costs_of_monetary_traffic_id: Option<String>,
    #[serde(
        rename = "accountForCostsOfMonetaryTrafficNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub account_for_costs_of_monetary_traffic_number: Option<String>,
    #[serde(
        rename = "accountForDunningFeeId",
        skip_serializing_if = "Option::is_none"
    )]
    pub account_for_dunning_fee_id: Option<String>,
    #[serde(
        rename = "accountForDunningFeeNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub account_for_dunning_fee_number: Option<String>,
    #[serde(rename = "accountId", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<String>,
    #[serde(rename = "accountNumber", skip_serializing_if = "Option::is_none")]
    pub account_number: Option<String>,
    #[serde(rename = "amount")]
    pub amount: crate::models::custom_attribute_definition::AttributeType,
    #[serde(rename = "amountDiscount", skip_serializing_if = "Option::is_none")]
    pub amount_discount: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(rename = "cashAccountSheetId", skip_serializing_if = "Option::is_none")]
    pub cash_account_sheet_id: Option<String>,
    #[serde(rename = "createdById", skip_serializing_if = "Option::is_none")]
    pub created_by_id: Option<String>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(rename = "currencyId", skip_serializing_if = "Option::is_none")]
    pub currency_id: Option<String>,
    #[serde(rename = "currencyName", skip_serializing_if = "Option::is_none")]
    pub currency_name: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "effectiveDate", skip_serializing_if = "Option::is_none")]
    pub effective_date: Option<i32>,
    #[serde(
        rename = "externalRecordNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub external_record_number: Option<String>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(rename = "origin", skip_serializing_if = "Option::is_none")]
    pub origin: Option<Origin>,
    #[serde(rename = "partyId", skip_serializing_if = "Option::is_none")]
    pub party_id: Option<String>,
    #[serde(rename = "paymentMethodId", skip_serializing_if = "Option::is_none")]
    pub payment_method_id: Option<String>,
    #[serde(rename = "paymentMethodName", skip_serializing_if = "Option::is_none")]
    pub payment_method_name: Option<String>,
    #[serde(
        rename = "paymentToleranceAccountId",
        skip_serializing_if = "Option::is_none"
    )]
    pub payment_tolerance_account_id: Option<String>,
    #[serde(
        rename = "paymentToleranceAccountNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub payment_tolerance_account_number: Option<String>,
    #[serde(rename = "paymentType")]
    pub payment_type: PaymentType,
    #[serde(rename = "taxId", skip_serializing_if = "Option::is_none")]
    pub tax_id: Option<String>,
    #[serde(rename = "taxName", skip_serializing_if = "Option::is_none")]
    pub tax_name: Option<String>,
}

impl MoneyTransaction {
    pub fn new(
        amount: crate::models::custom_attribute_definition::AttributeType,
        payment_type: PaymentType,
    ) -> MoneyTransaction {
        MoneyTransaction {
            id: None,
            version: None,
            account_for_costs_of_monetary_traffic_id: None,
            account_for_costs_of_monetary_traffic_number: None,
            account_for_dunning_fee_id: None,
            account_for_dunning_fee_number: None,
            account_id: None,
            account_number: None,
            amount,
            amount_discount: None,
            cash_account_sheet_id: None,
            created_by_id: None,
            created_date: None,
            currency_id: None,
            currency_name: None,
            description: None,
            effective_date: None,
            external_record_number: None,
            last_modified_date: None,
            origin: None,
            party_id: None,
            payment_method_id: None,
            payment_method_name: None,
            payment_tolerance_account_id: None,
            payment_tolerance_account_number: None,
            payment_type,
            tax_id: None,
            tax_name: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Origin {
    #[serde(rename = "AMAZON")]
    Amazon,
    #[serde(rename = "CAMT053")]
    Camt053,
    #[serde(rename = "EBAY")]
    Ebay,
    #[serde(rename = "FIGO")]
    Figo,
    #[serde(rename = "FINAPI")]
    Finapi,
    #[serde(rename = "FIN_TEC_SYSTEMS")]
    FinTecSystems,
    #[serde(rename = "KLARNA")]
    Klarna,
    #[serde(rename = "LONDON_ZURICH")]
    LondonZurich,
    #[serde(rename = "MANUALLY")]
    Manually,
    #[serde(rename = "MOLLIE")]
    Mollie,
    #[serde(rename = "MT940_KAPOTT")]
    Mt940Kapott,
    #[serde(rename = "MT940_PROVIDE")]
    Mt940Provide,
    #[serde(rename = "PAYPAL")]
    Paypal,
    #[serde(rename = "POS")]
    Pos,
    #[serde(rename = "STRIPE")]
    Stripe,
}

impl Default for Origin {
    fn default() -> Origin {
        Self::Amazon
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PaymentType {
    #[serde(rename = "DISBURSEMENT")]
    Disbursement,
    #[serde(rename = "RECEIPT")]
    Receipt,
}

impl Default for PaymentType {
    fn default() -> PaymentType {
        Self::Disbursement
    }
}
