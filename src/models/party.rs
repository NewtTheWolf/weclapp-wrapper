/*
 * weclapp api
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Contact: support@weclapp.com
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Party {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "addresses", skip_serializing_if = "Option::is_none")]
    pub addresses: Option<Vec<crate::models::Address>>,
    #[serde(rename = "bankAccounts", skip_serializing_if = "Option::is_none")]
    pub bank_accounts: Option<Vec<crate::models::PartyBankAccount>>,
    #[serde(rename = "birthDate", skip_serializing_if = "Option::is_none")]
    pub birth_date: Option<i32>,
    #[serde(
        rename = "commercialLanguageId",
        skip_serializing_if = "Option::is_none"
    )]
    pub commercial_language_id: Option<String>,
    #[serde(
        rename = "commissionSalesPartners",
        skip_serializing_if = "Option::is_none"
    )]
    pub commission_sales_partners: Option<Vec<crate::models::CommissionSalesPartner>>,
    #[serde(rename = "company", skip_serializing_if = "Option::is_none")]
    pub company: Option<String>,
    #[serde(rename = "company2", skip_serializing_if = "Option::is_none")]
    pub company2: Option<String>,
    #[serde(rename = "companySizeId", skip_serializing_if = "Option::is_none")]
    pub company_size_id: Option<String>,
    #[serde(rename = "companySizeName", skip_serializing_if = "Option::is_none")]
    pub company_size_name: Option<String>,
    #[serde(rename = "competitor", skip_serializing_if = "Option::is_none")]
    pub competitor: Option<bool>,
    #[serde(rename = "contacts", skip_serializing_if = "Option::is_none")]
    pub contacts: Option<Vec<crate::models::OnlyId>>,
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<i32>,
    #[serde(rename = "currencyId", skip_serializing_if = "Option::is_none")]
    pub currency_id: Option<String>,
    #[serde(rename = "currencyName", skip_serializing_if = "Option::is_none")]
    pub currency_name: Option<String>,
    #[serde(rename = "customAttributes", skip_serializing_if = "Option::is_none")]
    pub custom_attributes: Option<Vec<crate::models::CustomAttribute>>,
    #[serde(rename = "customer", skip_serializing_if = "Option::is_none")]
    pub customer: Option<bool>,
    #[serde(
        rename = "customerAmountInsured",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_amount_insured: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(
        rename = "customerAnnualRevenue",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_annual_revenue: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(
        rename = "customerBlockNotice",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_block_notice: Option<String>,
    #[serde(rename = "customerBlocked", skip_serializing_if = "Option::is_none")]
    pub customer_blocked: Option<bool>,
    #[serde(
        rename = "customerBusinessType",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_business_type: Option<CustomerBusinessType>,
    #[serde(rename = "customerCategoryId", skip_serializing_if = "Option::is_none")]
    pub customer_category_id: Option<String>,
    #[serde(
        rename = "customerCategoryName",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_category_name: Option<String>,
    #[serde(
        rename = "customerCreditLimit",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_credit_limit: Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(
        rename = "customerCurrentSalesStageId",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_current_sales_stage_id: Option<String>,
    #[serde(
        rename = "customerCurrentSalesStageName",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_current_sales_stage_name: Option<String>,
    #[serde(
        rename = "customerDebtorAccountId",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_debtor_account_id: Option<String>,
    #[serde(
        rename = "customerDebtorAccountNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_debtor_account_number: Option<String>,
    #[serde(
        rename = "customerDebtorAccountingCodeId",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_debtor_accounting_code_id: Option<String>,
    #[serde(
        rename = "customerDefaultHeaderDiscount",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_default_header_discount:
        Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(
        rename = "customerDefaultHeaderSurcharge",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_default_header_surcharge:
        Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(
        rename = "customerDefaultShippingCarrierId",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_default_shipping_carrier_id: Option<String>,
    #[serde(
        rename = "customerDeliveryBlock",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_delivery_block: Option<bool>,
    #[serde(
        rename = "customerFormerSalesPartner",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_former_sales_partner: Option<bool>,
    #[serde(rename = "customerInsolvent", skip_serializing_if = "Option::is_none")]
    pub customer_insolvent: Option<bool>,
    #[serde(rename = "customerInsured", skip_serializing_if = "Option::is_none")]
    pub customer_insured: Option<bool>,
    #[serde(
        rename = "customerLossDescription",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_loss_description: Option<String>,
    #[serde(
        rename = "customerLossReasonId",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_loss_reason_id: Option<String>,
    #[serde(
        rename = "customerLossReasonName",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_loss_reason_name: Option<String>,
    #[serde(
        rename = "customerNonStandardTaxId",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_non_standard_tax_id: Option<String>,
    #[serde(rename = "customerNumber", skip_serializing_if = "Option::is_none")]
    pub customer_number: Option<String>,
    #[serde(rename = "customerNumberOld", skip_serializing_if = "Option::is_none")]
    pub customer_number_old: Option<String>,
    #[serde(
        rename = "customerPaymentMethodId",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_payment_method_id: Option<String>,
    #[serde(
        rename = "customerPaymentMethodName",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_payment_method_name: Option<String>,
    #[serde(
        rename = "customerSalesChannel",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_sales_channel: Option<String>,
    #[serde(
        rename = "customerSalesOrderPaymentType",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_sales_order_payment_type: Option<CustomerSalesOrderPaymentType>,
    #[serde(
        rename = "customerSalesPartner",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_sales_partner: Option<bool>,
    #[serde(
        rename = "customerSalesPartnerDefaultCommissionFix",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_sales_partner_default_commission_fix:
        Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(
        rename = "customerSalesPartnerDefaultCommissionPercentage",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_sales_partner_default_commission_percentage:
        Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(
        rename = "customerSalesPartnerDefaultCommissionType",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_sales_partner_default_commission_type:
        Option<CustomerSalesPartnerDefaultCommissionType>,
    #[serde(
        rename = "customerSalesProbability",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_sales_probability: Option<i32>,
    #[serde(
        rename = "customerSalesStageHistory",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_sales_stage_history: Option<Vec<crate::models::SalesStageHistory>>,
    #[serde(
        rename = "customerSatisfaction",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_satisfaction: Option<CustomerSatisfaction>,
    #[serde(
        rename = "customerShipmentMethodId",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_shipment_method_id: Option<String>,
    #[serde(
        rename = "customerShipmentMethodName",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_shipment_method_name: Option<String>,
    #[serde(
        rename = "customerSupplierNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_supplier_number: Option<String>,
    #[serde(
        rename = "customerTermOfPaymentId",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_term_of_payment_id: Option<String>,
    #[serde(
        rename = "customerTermOfPaymentName",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_term_of_payment_name: Option<String>,
    #[serde(
        rename = "customerUseCustomsTariffNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub customer_use_customs_tariff_number: Option<bool>,
    #[serde(rename = "deliveryAddressId", skip_serializing_if = "Option::is_none")]
    pub delivery_address_id: Option<String>,
    #[serde(
        rename = "deliveryEmailAddressesId",
        skip_serializing_if = "Option::is_none"
    )]
    pub delivery_email_addresses_id: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "dunningAddressId", skip_serializing_if = "Option::is_none")]
    pub dunning_address_id: Option<String>,
    #[serde(
        rename = "dunningEmailAddressesId",
        skip_serializing_if = "Option::is_none"
    )]
    pub dunning_email_addresses_id: Option<String>,
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "eoriNumber", skip_serializing_if = "Option::is_none")]
    pub eori_number: Option<String>,
    #[serde(rename = "factoring", skip_serializing_if = "Option::is_none")]
    pub factoring: Option<bool>,
    #[serde(rename = "fax", skip_serializing_if = "Option::is_none")]
    pub fax: Option<String>,
    #[serde(rename = "firstName", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    #[serde(rename = "fixPhone2", skip_serializing_if = "Option::is_none")]
    pub fix_phone2: Option<String>,
    #[serde(
        rename = "fixedResponsibleUser",
        skip_serializing_if = "Option::is_none"
    )]
    pub fixed_responsible_user: Option<bool>,
    #[serde(rename = "habitualExporter", skip_serializing_if = "Option::is_none")]
    pub habitual_exporter: Option<bool>,
    #[serde(rename = "imageId", skip_serializing_if = "Option::is_none")]
    pub image_id: Option<String>,
    #[serde(rename = "invoiceAddressId", skip_serializing_if = "Option::is_none")]
    pub invoice_address_id: Option<String>,
    #[serde(rename = "invoiceBlock", skip_serializing_if = "Option::is_none")]
    pub invoice_block: Option<bool>,
    #[serde(rename = "invoiceRecipientId", skip_serializing_if = "Option::is_none")]
    pub invoice_recipient_id: Option<String>,
    #[serde(rename = "lastModifiedDate", skip_serializing_if = "Option::is_none")]
    pub last_modified_date: Option<i32>,
    #[serde(rename = "lastName", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    #[serde(rename = "leadRatingId", skip_serializing_if = "Option::is_none")]
    pub lead_rating_id: Option<String>,
    #[serde(rename = "leadRatingName", skip_serializing_if = "Option::is_none")]
    pub lead_rating_name: Option<String>,
    #[serde(rename = "leadSourceId", skip_serializing_if = "Option::is_none")]
    pub lead_source_id: Option<String>,
    #[serde(rename = "leadSourceName", skip_serializing_if = "Option::is_none")]
    pub lead_source_name: Option<String>,
    #[serde(rename = "leadStatus", skip_serializing_if = "Option::is_none")]
    pub lead_status: Option<LeadStatus>,
    #[serde(rename = "legalFormId", skip_serializing_if = "Option::is_none")]
    pub legal_form_id: Option<String>,
    #[serde(rename = "legalFormName", skip_serializing_if = "Option::is_none")]
    pub legal_form_name: Option<String>,
    #[serde(rename = "middleName", skip_serializing_if = "Option::is_none")]
    pub middle_name: Option<String>,
    #[serde(rename = "mobilePhone1", skip_serializing_if = "Option::is_none")]
    pub mobile_phone1: Option<String>,
    #[serde(rename = "mobilePhone2", skip_serializing_if = "Option::is_none")]
    pub mobile_phone2: Option<String>,
    #[serde(rename = "onlineAccounts", skip_serializing_if = "Option::is_none")]
    pub online_accounts: Option<Vec<crate::models::OnlineAccount>>,
    #[serde(rename = "optInEmail", skip_serializing_if = "Option::is_none")]
    pub opt_in_email: Option<bool>,
    #[serde(rename = "optInLetter", skip_serializing_if = "Option::is_none")]
    pub opt_in_letter: Option<bool>,
    #[serde(rename = "optInPhone", skip_serializing_if = "Option::is_none")]
    pub opt_in_phone: Option<bool>,
    #[serde(rename = "optInSms", skip_serializing_if = "Option::is_none")]
    pub opt_in_sms: Option<bool>,
    #[serde(rename = "parentPartyId", skip_serializing_if = "Option::is_none")]
    pub parent_party_id: Option<String>,
    #[serde(
        rename = "partyEmailAddresses",
        skip_serializing_if = "Option::is_none"
    )]
    pub party_email_addresses: Option<Vec<crate::models::PartyEmailAddresses>>,
    #[serde(
        rename = "partyHabitualExporterLettersOfIntent",
        skip_serializing_if = "Option::is_none"
    )]
    pub party_habitual_exporter_letters_of_intent:
        Option<Vec<crate::models::PartyHabitualExporterLetterOfIntent>>,
    #[serde(rename = "partyType")]
    pub party_type: PartyType,
    #[serde(rename = "personCompany", skip_serializing_if = "Option::is_none")]
    pub person_company: Option<String>,
    #[serde(rename = "personDepartmentId", skip_serializing_if = "Option::is_none")]
    pub person_department_id: Option<String>,
    #[serde(rename = "personRoleId", skip_serializing_if = "Option::is_none")]
    pub person_role_id: Option<String>,
    #[serde(rename = "phone", skip_serializing_if = "Option::is_none")]
    pub phone: Option<String>,
    #[serde(rename = "phoneHome", skip_serializing_if = "Option::is_none")]
    pub phone_home: Option<String>,
    #[serde(rename = "primaryAddressId", skip_serializing_if = "Option::is_none")]
    pub primary_address_id: Option<String>,
    #[serde(rename = "primaryContactId", skip_serializing_if = "Option::is_none")]
    pub primary_contact_id: Option<String>,
    #[serde(
        rename = "purchaseEmailAddressesId",
        skip_serializing_if = "Option::is_none"
    )]
    pub purchase_email_addresses_id: Option<String>,
    #[serde(rename = "purchaseViaPlafond", skip_serializing_if = "Option::is_none")]
    pub purchase_via_plafond: Option<bool>,
    #[serde(
        rename = "quotationEmailAddressesId",
        skip_serializing_if = "Option::is_none"
    )]
    pub quotation_email_addresses_id: Option<String>,
    #[serde(rename = "ratingId", skip_serializing_if = "Option::is_none")]
    pub rating_id: Option<String>,
    #[serde(rename = "ratingName", skip_serializing_if = "Option::is_none")]
    pub rating_name: Option<String>,
    #[serde(rename = "referenceNumber", skip_serializing_if = "Option::is_none")]
    pub reference_number: Option<String>,
    #[serde(rename = "responsibleUserId", skip_serializing_if = "Option::is_none")]
    pub responsible_user_id: Option<String>,
    #[serde(
        rename = "responsibleUserUsername",
        skip_serializing_if = "Option::is_none"
    )]
    pub responsible_user_username: Option<String>,
    #[serde(
        rename = "salesInvoiceEmailAddressesId",
        skip_serializing_if = "Option::is_none"
    )]
    pub sales_invoice_email_addresses_id: Option<String>,
    #[serde(
        rename = "salesOrderEmailAddressesId",
        skip_serializing_if = "Option::is_none"
    )]
    pub sales_order_email_addresses_id: Option<String>,
    #[serde(rename = "salutation", skip_serializing_if = "Option::is_none")]
    pub salutation: Option<Salutation>,
    #[serde(rename = "sectorId", skip_serializing_if = "Option::is_none")]
    pub sector_id: Option<String>,
    #[serde(rename = "sectorName", skip_serializing_if = "Option::is_none")]
    pub sector_name: Option<String>,
    #[serde(rename = "supplier", skip_serializing_if = "Option::is_none")]
    pub supplier: Option<bool>,
    #[serde(
        rename = "supplierCreditorAccountId",
        skip_serializing_if = "Option::is_none"
    )]
    pub supplier_creditor_account_id: Option<String>,
    #[serde(
        rename = "supplierCreditorAccountNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub supplier_creditor_account_number: Option<String>,
    #[serde(
        rename = "supplierCreditorAccountingCodeId",
        skip_serializing_if = "Option::is_none"
    )]
    pub supplier_creditor_accounting_code_id: Option<String>,
    #[serde(
        rename = "supplierCustomerNumberAtSupplier",
        skip_serializing_if = "Option::is_none"
    )]
    pub supplier_customer_number_at_supplier: Option<String>,
    #[serde(
        rename = "supplierDefaultShippingCarrierId",
        skip_serializing_if = "Option::is_none"
    )]
    pub supplier_default_shipping_carrier_id: Option<String>,
    #[serde(
        rename = "supplierMinimumPurchaseOrderAmount",
        skip_serializing_if = "Option::is_none"
    )]
    pub supplier_minimum_purchase_order_amount:
        Option<crate::models::custom_attribute_definition::AttributeType>,
    #[serde(
        rename = "supplierNonStandardTaxId",
        skip_serializing_if = "Option::is_none"
    )]
    pub supplier_non_standard_tax_id: Option<String>,
    #[serde(rename = "supplierNumber", skip_serializing_if = "Option::is_none")]
    pub supplier_number: Option<String>,
    #[serde(rename = "supplierNumberOld", skip_serializing_if = "Option::is_none")]
    pub supplier_number_old: Option<String>,
    #[serde(rename = "supplierOrderBlock", skip_serializing_if = "Option::is_none")]
    pub supplier_order_block: Option<bool>,
    #[serde(
        rename = "supplierPaymentMethodId",
        skip_serializing_if = "Option::is_none"
    )]
    pub supplier_payment_method_id: Option<String>,
    #[serde(
        rename = "supplierPaymentMethodName",
        skip_serializing_if = "Option::is_none"
    )]
    pub supplier_payment_method_name: Option<String>,
    #[serde(
        rename = "supplierShipmentMethodId",
        skip_serializing_if = "Option::is_none"
    )]
    pub supplier_shipment_method_id: Option<String>,
    #[serde(
        rename = "supplierShipmentMethodName",
        skip_serializing_if = "Option::is_none"
    )]
    pub supplier_shipment_method_name: Option<String>,
    #[serde(
        rename = "supplierTermOfPaymentId",
        skip_serializing_if = "Option::is_none"
    )]
    pub supplier_term_of_payment_id: Option<String>,
    #[serde(
        rename = "supplierTermOfPaymentName",
        skip_serializing_if = "Option::is_none"
    )]
    pub supplier_term_of_payment_name: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "taxId", skip_serializing_if = "Option::is_none")]
    pub tax_id: Option<String>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "titleId", skip_serializing_if = "Option::is_none")]
    pub title_id: Option<String>,
    #[serde(rename = "topics", skip_serializing_if = "Option::is_none")]
    pub topics: Option<Vec<crate::models::Entity>>,
    #[serde(
        rename = "vatIdentificationNumber",
        skip_serializing_if = "Option::is_none"
    )]
    pub vat_identification_number: Option<String>,
    #[serde(rename = "website", skip_serializing_if = "Option::is_none")]
    pub website: Option<String>,
    #[serde(rename = "xRechnungLeitwegId", skip_serializing_if = "Option::is_none")]
    pub x_rechnung_leitweg_id: Option<String>,
}

impl Party {
    pub fn new(party_type: PartyType) -> Party {
        Party {
            id: None,
            version: None,
            addresses: None,
            bank_accounts: None,
            birth_date: None,
            commercial_language_id: None,
            commission_sales_partners: None,
            company: None,
            company2: None,
            company_size_id: None,
            company_size_name: None,
            competitor: None,
            contacts: None,
            created_date: None,
            currency_id: None,
            currency_name: None,
            custom_attributes: None,
            customer: None,
            customer_amount_insured: None,
            customer_annual_revenue: None,
            customer_block_notice: None,
            customer_blocked: None,
            customer_business_type: None,
            customer_category_id: None,
            customer_category_name: None,
            customer_credit_limit: None,
            customer_current_sales_stage_id: None,
            customer_current_sales_stage_name: None,
            customer_debtor_account_id: None,
            customer_debtor_account_number: None,
            customer_debtor_accounting_code_id: None,
            customer_default_header_discount: None,
            customer_default_header_surcharge: None,
            customer_default_shipping_carrier_id: None,
            customer_delivery_block: None,
            customer_former_sales_partner: None,
            customer_insolvent: None,
            customer_insured: None,
            customer_loss_description: None,
            customer_loss_reason_id: None,
            customer_loss_reason_name: None,
            customer_non_standard_tax_id: None,
            customer_number: None,
            customer_number_old: None,
            customer_payment_method_id: None,
            customer_payment_method_name: None,
            customer_sales_channel: None,
            customer_sales_order_payment_type: None,
            customer_sales_partner: None,
            customer_sales_partner_default_commission_fix: None,
            customer_sales_partner_default_commission_percentage: None,
            customer_sales_partner_default_commission_type: None,
            customer_sales_probability: None,
            customer_sales_stage_history: None,
            customer_satisfaction: None,
            customer_shipment_method_id: None,
            customer_shipment_method_name: None,
            customer_supplier_number: None,
            customer_term_of_payment_id: None,
            customer_term_of_payment_name: None,
            customer_use_customs_tariff_number: None,
            delivery_address_id: None,
            delivery_email_addresses_id: None,
            description: None,
            dunning_address_id: None,
            dunning_email_addresses_id: None,
            email: None,
            eori_number: None,
            factoring: None,
            fax: None,
            first_name: None,
            fix_phone2: None,
            fixed_responsible_user: None,
            habitual_exporter: None,
            image_id: None,
            invoice_address_id: None,
            invoice_block: None,
            invoice_recipient_id: None,
            last_modified_date: None,
            last_name: None,
            lead_rating_id: None,
            lead_rating_name: None,
            lead_source_id: None,
            lead_source_name: None,
            lead_status: None,
            legal_form_id: None,
            legal_form_name: None,
            middle_name: None,
            mobile_phone1: None,
            mobile_phone2: None,
            online_accounts: None,
            opt_in_email: None,
            opt_in_letter: None,
            opt_in_phone: None,
            opt_in_sms: None,
            parent_party_id: None,
            party_email_addresses: None,
            party_habitual_exporter_letters_of_intent: None,
            party_type,
            person_company: None,
            person_department_id: None,
            person_role_id: None,
            phone: None,
            phone_home: None,
            primary_address_id: None,
            primary_contact_id: None,
            purchase_email_addresses_id: None,
            purchase_via_plafond: None,
            quotation_email_addresses_id: None,
            rating_id: None,
            rating_name: None,
            reference_number: None,
            responsible_user_id: None,
            responsible_user_username: None,
            sales_invoice_email_addresses_id: None,
            sales_order_email_addresses_id: None,
            salutation: None,
            sector_id: None,
            sector_name: None,
            supplier: None,
            supplier_creditor_account_id: None,
            supplier_creditor_account_number: None,
            supplier_creditor_accounting_code_id: None,
            supplier_customer_number_at_supplier: None,
            supplier_default_shipping_carrier_id: None,
            supplier_minimum_purchase_order_amount: None,
            supplier_non_standard_tax_id: None,
            supplier_number: None,
            supplier_number_old: None,
            supplier_order_block: None,
            supplier_payment_method_id: None,
            supplier_payment_method_name: None,
            supplier_shipment_method_id: None,
            supplier_shipment_method_name: None,
            supplier_term_of_payment_id: None,
            supplier_term_of_payment_name: None,
            tags: None,
            tax_id: None,
            title: None,
            title_id: None,
            topics: None,
            vat_identification_number: None,
            website: None,
            x_rechnung_leitweg_id: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CustomerBusinessType {
    #[serde(rename = "B2B")]
    B2B,
    #[serde(rename = "B2C")]
    B2C,
    #[serde(rename = "B2G")]
    B2G,
}

impl Default for CustomerBusinessType {
    fn default() -> CustomerBusinessType {
        Self::B2B
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CustomerSalesOrderPaymentType {
    #[serde(rename = "ADVANCE_PAYMENT")]
    AdvancePayment,
    #[serde(rename = "COUNTER_SALES")]
    CounterSales,
    #[serde(rename = "PART_PAYMENT")]
    PartPayment,
    #[serde(rename = "PREPAYMENT")]
    Prepayment,
    #[serde(rename = "STANDARD")]
    Standard,
}

impl Default for CustomerSalesOrderPaymentType {
    fn default() -> CustomerSalesOrderPaymentType {
        Self::AdvancePayment
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CustomerSalesPartnerDefaultCommissionType {
    #[serde(rename = "FIX")]
    Fix,
    #[serde(rename = "FIX_AND_MARGIN")]
    FixAndMargin,
    #[serde(rename = "FIX_AND_REVENUE")]
    FixAndRevenue,
    #[serde(rename = "MARGIN")]
    Margin,
    #[serde(rename = "NO_COMMISSION")]
    NoCommission,
    #[serde(rename = "REVENUE")]
    Revenue,
}

impl Default for CustomerSalesPartnerDefaultCommissionType {
    fn default() -> CustomerSalesPartnerDefaultCommissionType {
        Self::Fix
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CustomerSatisfaction {
    #[serde(rename = "NEUTRAL")]
    Neutral,
    #[serde(rename = "SATISFIED")]
    Satisfied,
    #[serde(rename = "UNSATISFIED")]
    Unsatisfied,
}

impl Default for CustomerSatisfaction {
    fn default() -> CustomerSatisfaction {
        Self::Neutral
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LeadStatus {
    #[serde(rename = "CONVERTED")]
    Converted,
    #[serde(rename = "DISQUALIFIED")]
    Disqualified,
    #[serde(rename = "NEW")]
    New,
    #[serde(rename = "PREQUALIFIED")]
    Prequalified,
    #[serde(rename = "QUALIFIED")]
    Qualified,
}

impl Default for LeadStatus {
    fn default() -> LeadStatus {
        Self::Converted
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PartyType {
    #[serde(rename = "ORGANIZATION")]
    Organization,
    #[serde(rename = "PERSON")]
    Person,
}

impl Default for PartyType {
    fn default() -> PartyType {
        Self::Organization
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Salutation {
    #[serde(rename = "COMPANY")]
    Company,
    #[serde(rename = "FAMILY")]
    Family,
    #[serde(rename = "MR")]
    Mr,
    #[serde(rename = "MRS")]
    Mrs,
    #[serde(rename = "NO_SALUTATION")]
    NoSalutation,
}

impl Default for Salutation {
    fn default() -> Salutation {
        Self::Company
    }
}
